Module("lib/analysis-library.generated",[Imports([Import("libstratego-lib"),Import("libstratego-parallel"),Import("lib/editor-common.generated"),Import("lib/analysis-library-internal.generated"),Import("lib/index-library.generated")]),Signature([Constructors([OpDecl("Editor",ConstType(SortNoArgs("AnalysisPhase"))),OpDecl("Compile",ConstType(SortNoArgs("AnalysisPhase"))),OpDecl("Def",FunType([ConstType(Sort("List",[SortNoArgs("UriPart")]))],ConstType(SortNoArgs("Summary")))),OpDecl("Use",FunType([ConstType(Sort("List",[SortNoArgs("UriPart")]))],ConstType(SortNoArgs("Summary")))),OpDecl("BadUse",FunType([ConstType(Sort("List",[SortNoArgs("UriPart")]))],ConstType(SortNoArgs("Summary")))),OpDecl("Read",FunType([ConstType(Sort("List",[SortNoArgs("UriPart")]))],ConstType(SortNoArgs("Summary")))),OpDecl("ReadWildcard",FunType([ConstType(Sort("List",[SortNoArgs("UriPart")])),ConstType(SortNoArgs("String"))],ConstType(SortNoArgs("Summary")))),OpDecl("Diff",FunType([ConstType(Sort("List",[SortNoArgs("UriPart")])),ConstType(Sort("List",[SortNoArgs("Summary")]))],ConstType(SortNoArgs("Summary")))),OpDecl("StopLookup",ConstType(SortNoArgs("LookupAction")))])]),Rules([SDefT("adjust-index-lookup",[DefaultVarDec("check-target-name")],[DefaultVarDec("namespace"),DefaultVarDec("path"),DefaultVarDec("prefix")],Fail),SDefT("adjust-index-import",[],[DefaultVarDec("namespace"),DefaultVarDec("path")],Fail),SDefT("adjust-index-def-data",[DefaultVarDec("store-results")],[DefaultVarDec("namespace"),DefaultVarDec("path")],Fail),SDefT("adjust-index-path",[DefaultVarDec("check-target-definition")],[DefaultVarDec("namespace"),DefaultVarDec("path")],Fail),SDefNoArgs("index-diff-constructors",Match(NoAnnoList(Op("Def",[Wld])))),RDefNoArgs("index-diff-compare",Rule(NoAnnoList(Tuple([NoAnnoList(Op("Def",[Var("u1")])),NoAnnoList(Op("Def",[Var("u2")]))])),RootApp(Id),BA(CallNoArgs(SVar("index-uri-eq")),NoAnnoList(Tuple([Var("u1"),Var("u2")])))))]),Rules([RDefT("analyze-top",[],[DefaultVarDec("language")],RuleNoCond(NoAnnoList(Tuple([Var("ast"),Var("path"),Var("project-path")])),App(CallT(SVar("analyze-top"),[],[NoAnnoList(Op("Editor",[])),Var("language"),Var("path"),Var("project-path")]),Var("ast")))),RDefT("analyze-top",[],[DefaultVarDec("phase"),DefaultVarDec("language"),DefaultVarDec("path"),DefaultVarDec("project-path")],Rule(Var("ast"),NoAnnoList(Tuple([Var("ast'"),Var("filesToAnalyze")])),[WithClause(Seq(Assign(Var("full-path"),NoAnnoList(StringQuotation1("                     ",[StringEscape1("                     ",Var("project-path")),QStr("/"),StringEscape1("                                    ",Var("path"))]))),CondChoice(CallNoArgs(SVar("index-split")),Seq(CallT(SVar("index-setup"),[],[Var("language"),NoAnnoList(List([Var("project-path")])),Var("full-path")]),Seq(Assign(Var("asts"),App(CallNoArgs(SVar("index-toplevel-split")),Var("ast"))),Seq(Assign(Var("astsFilePairs"),App(Call(SVar("map"),[CallT(SVar("ast-uri-to-ast-file"),[],[Var("full-path")])]),Var("asts"))),Assign(NoAnnoList(Op("Results",[Var("ast'"),Wld,Wld,Wld,Wld,Wld,Var("filesToAnalyze")])),App(CallT(SVar("analyze-top-internal"),[],[Var("phase"),Var("language"),Var("project-path"),Var("full-path")]),Var("astsFilePairs")))))),Seq(Assign(NoAnnoList(Op("Results",[Var("asts"),Wld,Wld,Wld,Wld,Wld,Var("filesToAnalyze")])),App(CallT(SVar("analyze-top-internal"),[],[Var("phase"),Var("language"),Var("project-path"),Var("full-path")]),NoAnnoList(List([NoAnnoList(Tuple([Var("ast"),NoAnnoList(Tuple([Var("full-path"),NoAnnoList(List([]))]))]))])))),Assign(Var("ast'"),App(CallNoArgs(SVar("Hd")),Var("asts")))))))]))]),Rules([RDef("index-parallel-analyze-files",[DefaultVarDec("analyze")],Rule(Var("files"),NoAnnoList(Op("None",[])),[WithClause(Seq(CallNoArgs(SVar("length")),CallNoArgs(SVar("set-total-work-units")))),WithClause(Seq(Call(SVar("index-parallel-analyze"),[CallNoArgs(SVar("analyze"))]),Call(SVar("filter"),[Seq(Not(LChoice(Match(NoAnnoList(Op("ParallelResults",[NoAnnoList(Tuple([])),NoAnnoList(Tuple([])),Wld,Wld,Wld,Wld]))),Match(NoAnnoList(Op("ParallelResults",[NoAnnoList(Tuple([])),NoAnnoList(List([NoAnnoList(Tuple([]))])),Wld,Wld,Wld,Wld]))))),CallNoArgs(SVar("index-set-markers")))])))]))]),Rules([RDefT("index-merge-ast",[],[DefaultVarDec("toplevel")],Rule(Var("term"),Var("merged"),[WithClause(CondChoice(BA(CallNoArgs(SVar("is-list")),Var("term")),Seq(Assign(NoAnnoList(ListTail([Var("first-ast")],Wld)),Var("term")),Assign(Var("merged"),App(CallT(SVar("index-merge-ast"),[],[Var("toplevel")]),Var("first-ast")))),CondChoice(BA(CallNoArgs(SVar("index-is-qualifier")),Var("term")),Seq(Assign(NoAnnoList(ListTail([Var("elem")],Wld)),App(CallNoArgs(SVar("index-qualifier-subelements")),Var("term"))),Assign(Var("merged"),App(CallT(SVar("index-create-qualifier"),[],[Var("term")]),App(CallT(SVar("index-merge-ast"),[],[Var("toplevel")]),Var("elem"))))),Assign(Var("merged"),Var("toplevel")))))]))]),Rules([RDefT("index-get-data",[],[DefaultVarDec("kind")],RuleNoCond(RootApp(CallT(SVar("with"),[Assign(Var("uri"),RootApp(CallNoArgs(SVar("index-uri"))))],[NoAnnoList(Str("\"Def, key or URI expected\""))])),App(CallNoArgs(SVar("index-get-value")),NoAnnoList(Op("DefData",[Var("uri"),Var("kind"),NoAnnoList(Tuple([]))]))))),RDefT("index-get-data-all",[],[DefaultVarDec("kind")],RuleNoCond(RootApp(CallT(SVar("with"),[Assign(Var("uri"),RootApp(CallNoArgs(SVar("index-uri"))))],[NoAnnoList(Str("\"Def, key or URI expected\""))])),App(CallNoArgs(SVar("index-get-all-values")),NoAnnoList(Op("DefData",[Var("uri"),Var("kind"),NoAnnoList(Tuple([]))]))))),RDefNoArgs("index-get-use",RuleNoCond(RootApp(CallT(SVar("with"),[Assign(Var("uri"),RootApp(CallNoArgs(SVar("index-uri"))))],[NoAnnoList(Str("\"Def, key or URI expected\""))])),App(CallNoArgs(SVar("index-get-all")),NoAnnoList(Op("Use",[Var("uri")]))))),RDefNoArgs("index-get-uses-all",RuleNoCond(RootApp(CallT(SVar("with"),[Assign(Var("uri"),RootApp(CallNoArgs(SVar("index-uri"))))],[NoAnnoList(Str("\"Def, key or URI expected\""))])),App(CallNoArgs(SVar("index-get-all")),NoAnnoList(Op("Use",[Var("uri")]))))),RDefNoArgs("index-get-reads-all",Rule(RootApp(CallT(SVar("with"),[Assign(Var("uri"),RootApp(CallNoArgs(SVar("index-uri"))))],[NoAnnoList(Str("\"Def, key or URI expected\""))])),App(CallNoArgs(SVar("conc")),NoAnnoList(Tuple([Var("reads"),Var("readwildcards'")]))),Seq(Assign(Var("reads"),App(CallNoArgs(SVar("index-get-all")),NoAnnoList(Op("Read",[Var("uri")])))),CondChoice(AM(Build(Var("uri")),NoAnnoList(ListTail([Var("namespace"),Var("prefix")],Var("path-parent")))),Seq(Assign(Var("readwildcards"),App(CallNoArgs(SVar("index-get-all")),NoAnnoList(Op("ReadWildcard",[NoAnnoList(ListTail([Var("namespace")],Var("path-parent"))),NoAnnoList(Tuple([]))])))),Assign(Var("readwildcards'"),App(Call(SVar("filter"),[CallT(SVar("index-readwildcard-substring"),[],[Var("prefix")])]),Var("readwildcards")))),Assign(Var("readwildcards'"),NoAnnoList(List([]))))))),RDefNoArgs("index-get-all",Rule(Var("template"),App(CallNoArgs(SVar("indexlib-get-all")),Var("template")),[WithClause(IfThen(Assign(Var("set"),RootApp(CallNoArgs(SVar("Index-ReadSet")))),Seq(Assign(Var("uri"),RootApp(CallNoArgs(SVar("index-uri")))),BA(CallT(SVar("iset-add"),[],[NoAnnoList(Op("Read",[Var("uri")]))]),Var("set")))))])),RDefNoArgs("index-get-all-values",RuleNoCond(Var("template"),App(Call(SVar("map"),[CallNoArgs(SVar("index-value"))]),App(CallNoArgs(SVar("index-get-all")),Var("template"))))),RDefNoArgs("index-get",RuleNoCond(Var("template"),App(Match(NoAnnoList(ListTail([RootApp(Id)],Wld))),App(CallNoArgs(SVar("index-get-all")),Var("template"))))),RDefNoArgs("index-get-value",RuleNoCond(Var("template"),App(CallNoArgs(SVar("index-value")),App(Match(NoAnnoList(ListTail([RootApp(Id)],Wld))),App(CallNoArgs(SVar("index-get-all")),Var("template")))))),SDefT("index-get-children",[],[DefaultVarDec("namespace")],CallT(SVar("index-get-children"),[LRule(RuleNoCond(Var("uri"),NoAnnoList(Op("Def",[Var("uri")])))),Id],[Var("namespace")])),RDefT("index-get-children",[DefaultVarDec("construct-template"),DefaultVarDec("name-compare")],[DefaultVarDec("namespace")],Rule(RootApp(CallT(SVar("with"),[Assign(NoAnnoList(ListTail([Var("parent-ns")],Var("path"))),RootApp(CallNoArgs(SVar("index-uri"))))],[NoAnnoList(Str("\"Def, key or URI expected\""))])),Var("children"),[WithClause(Seq(Assign(Var("template"),App(CallNoArgs(SVar("construct-template")),NoAnnoList(ListTail([Var("namespace")],Var("path"))))),Seq(Assign(Var("children"),RootApp(Prim("\"LANG_index_get_children\"",[Var("template")]))),BA(CallT(SVar("store-wildcard-read"),[],[Var("namespace"),Var("path"),NoAnnoList(Str("\"\""))]),Var("children")))))])),SDefT("index-get-children",[],[DefaultVarDec("namespace"),DefaultVarDec("prefix")],CallT(SVar("index-get-children"),[LRule(RuleNoCond(Var("uri"),NoAnnoList(Op("Def",[Var("uri")])))),CallT(SVar("index-compare-name-substring"),[],[Var("prefix"),Var("namespace")])],[Var("namespace"),Var("prefix")])),RDefT("index-get-children",[DefaultVarDec("construct-template"),DefaultVarDec("name-compare")],[DefaultVarDec("namespace"),DefaultVarDec("prefix")],Rule(RootApp(CallT(SVar("with"),[Assign(NoAnnoList(ListTail([Var("parent-ns")],Var("path"))),RootApp(CallNoArgs(SVar("index-uri"))))],[NoAnnoList(Str("\"Def, key or URI expected\""))])),Var("children'"),[WithClause(Seq(Assign(Var("template"),App(CallNoArgs(SVar("construct-template")),NoAnnoList(ListTail([Var("namespace")],Var("path"))))),Seq(Assign(Var("children"),RootApp(Prim("\"LANG_index_get_children\"",[Var("template")]))),Seq(Assign(Var("children'"),App(Call(SVar("filter"),[CallNoArgs(SVar("name-compare"))]),Var("children"))),BA(CallT(SVar("store-wildcard-read"),[],[Var("namespace"),Var("path"),Var("prefix")]),Var("children'"))))))])),RDef("index-get-referenced-files",[DefaultVarDec("construct-from-uri")],Rule(Var("entries"),Var("files"),Seq(Assign(Var("uris"),App(Call(SVar("filter"),[CallNoArgs(SVar("index-uri"))]),Var("entries"))),Seq(Assign(Var("referenced"),App(CallNoArgs(SVar("concat")),App(Call(SVar("filter"),[CallNoArgs(SVar("construct-from-uri"))]),Var("uris")))),Assign(Var("files"),App(CallNoArgs(SVar("iset-elements")),App(CallT(SVar("iset-addlist"),[],[App(Call(SVar("mapconcat"),[CallNoArgs(SVar("index-get-files-of"))]),Var("referenced"))]),RootApp(CallNoArgs(SVar("new-iset")))))))))),SDefNoArgs("index-get-dependent-files",Call(SVar("index-get-referenced-files"),[CallNoArgs(SVar("index-file-dependent-construct"))]))]),Rules([RDefNoArgs("index-lookup",Rule(AnnoList(Var("x"),[NoAnnoList(ListTail([Var("namespace")],Var("path")))]),App(CallT(SVar("index-lookup-internal"),[CallT(SVar("index-compare-name-equal"),[],[Var("name")])],[Var("ns"),Var("path"),Var("name")]),Var("x")),Seq(Assign(Var("ns"),App(CallNoArgs(SVar("index-namespace-unwrap")),Var("namespace"))),Assign(Var("name"),App(CallNoArgs(SVar("strip-annos")),Var("x")))))),RDefNoArgs("index-lookup-all",Rule(AnnoList(Var("x"),[NoAnnoList(ListTail([Var("namespace")],Var("path")))]),App(CallT(SVar("index-lookup-all-internal"),[CallT(SVar("index-compare-name-equal"),[],[Var("name")])],[Var("ns"),Var("path"),Var("name")]),Var("x")),Seq(Assign(Var("ns"),App(CallNoArgs(SVar("index-namespace-unwrap")),Var("namespace"))),Assign(Var("name"),App(CallNoArgs(SVar("strip-annos")),Var("x")))))),RDefT("index-lookup-all",[],[DefaultVarDec("prefix")],Rule(AnnoList(Var("x"),[NoAnnoList(ListTail([Var("namespace")],Var("path")))]),App(CallT(SVar("index-lookup-all-internal"),[CallT(SVar("index-compare-name-substring"),[],[Var("prefix")])],[Var("ns"),Var("path"),Var("prefix")]),Var("x")),Assign(Var("ns"),App(CallNoArgs(SVar("index-namespace-unwrap")),Var("namespace"))))),RDefNoArgs("index-lookup-all-scoped",Rule(AnnoList(Var("x"),[NoAnnoList(ListTail([Var("namespace")],Var("path")))]),App(CallT(SVar("index-lookup-all-scoped-internal"),[CallT(SVar("index-compare-name-equal"),[],[Var("name")])],[Var("ns"),Var("parent-path"),Var("name")]),Var("x")),Seq(Assign(Var("ns"),App(CallNoArgs(SVar("index-namespace-unwrap")),Var("namespace"))),Seq(Assign(Var("name"),App(CallNoArgs(SVar("strip-annos")),Var("x"))),AM(LChoice(BA(Match(NoAnnoList(ListTail([Wld],RootApp(Id)))),Var("path")),Build(Var("path"))),Var("parent-path")))))),RDefNoArgs("index-lookup-all-scoped-noimports",Rule(AnnoList(Var("x"),[NoAnnoList(ListTail([Var("namespace")],Var("path")))]),App(CallT(SVar("index-lookup-all-scoped-internal"),[Fail,Id,CallT(SVar("index-compare-name-equal"),[],[Var("name")])],[Var("ns"),Var("parent-path"),Var("name")]),Var("x")),Seq(Assign(Var("ns"),App(CallNoArgs(SVar("index-namespace-unwrap")),Var("namespace"))),Seq(Assign(Var("name"),App(CallNoArgs(SVar("strip-annos")),Var("x"))),AM(LChoice(BA(Match(NoAnnoList(ListTail([Wld],RootApp(Id)))),Var("path")),Build(Var("path"))),Var("parent-path")))))),RDefT("index-lookup-all-scoped",[],[DefaultVarDec("prefix")],Rule(AnnoList(Var("x"),[NoAnnoList(ListTail([Var("namespace")],Var("path")))]),App(CallT(SVar("index-lookup-all-scoped-internal"),[CallT(SVar("index-compare-name-substring"),[],[Var("prefix")])],[Var("ns"),Var("parent-path"),Var("prefix")]),Var("x")),Seq(Assign(Var("ns"),App(CallNoArgs(SVar("index-namespace-unwrap")),Var("namespace"))),AM(LChoice(BA(Match(NoAnnoList(ListTail([Wld],RootApp(Id)))),Var("path")),Build(Var("path"))),Var("parent-path"))))),SDefT("index-lookup-children",[],[DefaultVarDec("namespace")],CallT(SVar("index-lookup-children"),[],[Var("namespace"),NoAnnoList(Str("\"\""))])),RDefT("index-lookup-children",[],[DefaultVarDec("namespace"),DefaultVarDec("prefix")],RuleNoCond(AnnoList(Var("x"),[NoAnnoList(ListTail([Wld],Var("path")))]),App(CallT(SVar("index-lookup-all-scoped-internal"),[CallT(SVar("index-compare-name-substring"),[],[Var("prefix"),Var("namespace")])],[Var("namespace"),Var("path"),Var("prefix")]),Var("x"))))]),Rules([RDefNoArgs("index-uri-namespace",RuleNoCond(AnnoList(Var("x"),[NoAnnoList(ListTail([Var("namespace")],Var("path")))]),App(CallNoArgs(SVar("index-namespace-unwrap")),Var("namespace")))),RDefNoArgs("index-uri-path",Rule(AnnoList(Var("x"),[NoAnnoList(ListTail([Var("namespace")],Var("path")))]),Var("path'"),CondChoice(AM(Build(Var("namespace")),NoAnnoList(Op("Unresolved",[Var("namespace")]))),Assign(NoAnnoList(Op("Def",[Var("path'")])),RootApp(CallNoArgs(SVar("index-lookup")))),Assign(Var("path'"),Var("path"))))),RDefNoArgs("index-uri-name",RuleNoCond(AnnoList(Var("x"),[NoAnnoList(ListTail([Wld],NoAnnoList(ListTail([Var("name")],Wld))))]),Var("name"))),SDefNoArgs("index-is-definition",Where(CallNoArgs(SVar("nam-get-definition-key")))),RDefNoArgs("index-key-eq",Rule(NoAnnoList(Tuple([Var("k1"),Var("k2")])),RootApp(Id),BA(CallNoArgs(SVar("eq")),NoAnnoList(Tuple([App(CallNoArgs(SVar("index-key-unwrap")),Var("k1")),App(CallNoArgs(SVar("index-key-unwrap")),Var("k2"))]))))),RDefNoArgs("index-filepairs-to-files",Rule(Var("filePairs"),Var("files"),[WithClause(Assign(Var("files"),App(CallNoArgs(SVar("make-set")),App(Call(SVar("map"),[Seq(CallNoArgs(SVar("Fst")),CallT(SVar("string-replace"),[],[App(CallNoArgs(SVar("conc-strings")),NoAnnoList(Tuple([RootApp(CallNoArgs(SVar("project-path"))),NoAnnoList(Str("\"/\""))]))),NoAnnoList(Str("\"\""))]))]),Var("filePairs")))))]))])])