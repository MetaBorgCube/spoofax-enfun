definition([module(unparameterized("Enfungenerated"),[],[exports(conc-grammars(conc-grammars(conc-grammars(conc-grammars(conc-grammars(conc-grammars(conc-grammars(conc-grammars(conc-grammars(conc-grammars(conc-grammars(conc-grammars(conc-grammars(conc-grammars(conc-grammars(conc-grammars(conc-grammars(conc-grammars(conc-grammars(conc-grammars(context-free-syntax([prod([lit("module"),sort("ID"),iter-star(sort("Definition"))],sort("Module"),attrs([term(cons("Module"))])),prod([lit("imports"),sort("ID")],sort("Definition"),attrs([term(cons("Imports"))]))]),context-free-syntax([prod([sort("CONTENTCOMPLETE")],sort("Module"),attrs([term(cons("COMPLETION-Module"))])),prod([sort("CONTENTCOMPLETE")],sort("Definition"),attrs([term(cons("COMPLETION-Definition"))]))])),context-free-syntax([prod([lit("entity"),sort("ID"),opt(sort("TypeParams")),opt(sort("Extension")),lit("{"),iter-star(sort("Property")),lit("}")],sort("Definition"),attrs([term(cons("Entity"))])),prod([lit(":"),sort("ID")],sort("Extension"),attrs([term(cons("Extends"))])),prod([sort("ID")],sort("Type"),attrs([term(cons("Type0"))])),prod([sort("ID"),lit("<"),iter-star-sep(sort("Type"),lit(",")),lit(">")],sort("Type"),attrs([term(cons("Type"))])),prod([lit("<"),iter-star-sep(sort("TypeParam"),lit(",")),lit(">")],sort("TypeParams"),attrs([term(cons("TypeParams"))])),prod([sort("ID")],sort("TypeParam"),attrs([term(cons("TypeParam"))]))])),context-free-syntax([prod([sort("CONTENTCOMPLETE")],sort("Definition"),attrs([term(cons("COMPLETION-Definition"))])),prod([sort("CONTENTCOMPLETE")],sort("Extension"),attrs([term(cons("COMPLETION-Extension"))])),prod([sort("CONTENTCOMPLETE")],sort("Type"),attrs([term(cons("COMPLETION-Type"))])),prod([sort("CONTENTCOMPLETE")],sort("TypeParams"),attrs([term(cons("COMPLETION-TypeParams"))])),prod([sort("CONTENTCOMPLETE")],sort("TypeParam"),attrs([term(cons("COMPLETION-TypeParam"))]))])),context-free-syntax([prod([sort("ID"),lit(":"),sort("Type"),opt(sort("PropInit"))],sort("Property"),attrs([term(cons("Property"))])),prod([lit(":="),sort("Exp")],sort("PropInit"),attrs([term(cons("Init"))])),prod([sort("Exp"),lit("."),sort("ID")],sort("Exp"),attrs([term(cons("PropAccess"))])),prod([lit("this")],sort("Exp"),attrs([term(cons("This")),prefer])),prod([sort("Type"),lit(".new"),lit("()")],sort("Exp"),attrs([term(cons("New"))]))])),context-free-syntax([prod([sort("CONTENTCOMPLETE")],sort("Property"),attrs([term(cons("COMPLETION-Property"))])),prod([sort("CONTENTCOMPLETE")],sort("PropInit"),attrs([term(cons("COMPLETION-PropInit"))])),prod([sort("CONTENTCOMPLETE")],sort("Exp"),attrs([term(cons("COMPLETION-Exp"))]))])),context-free-syntax([prod([lit("function"),sort("ID"),lit("("),iter-star-sep(sort("Arg"),lit(",")),lit(")"),opt(sort("ReturnType"))],sort("Property"),attrs([term(cons("FunDecl"))])),prod([lit("function"),sort("ID"),lit("("),iter-star-sep(sort("Arg"),lit(",")),lit(")"),opt(sort("ReturnType")),lit("{"),iter-star(sort("Stat")),lit("}")],sort("Property"),attrs([term(cons("FunDef"))])),prod([sort("ID"),lit("("),iter-star-sep(sort("Exp"),lit(",")),lit(")")],sort("Exp"),attrs([term(cons("ThisCall"))])),prod([sort("Exp"),lit("."),sort("ID"),lit("("),iter-star-sep(sort("Exp"),lit(",")),lit(")")],sort("Exp"),attrs([term(cons("MethCall"))])),prod([sort("ID"),lit(":"),sort("Type")],sort("Arg"),attrs([term(cons("Arg"))])),prod([lit(":"),sort("Type")],sort("ReturnType"),attrs([])),prod([lit("return"),sort("Exp"),lit(";")],sort("Stat"),attrs([term(cons("Return"))]))])),context-free-syntax([prod([sort("CONTENTCOMPLETE")],sort("Property"),attrs([term(cons("COMPLETION-Property"))])),prod([sort("CONTENTCOMPLETE")],sort("Exp"),attrs([term(cons("COMPLETION-Exp"))])),prod([sort("CONTENTCOMPLETE")],sort("Arg"),attrs([term(cons("COMPLETION-Arg"))])),prod([sort("CONTENTCOMPLETE")],sort("ReturnType"),attrs([term(cons("COMPLETION-ReturnType"))])),prod([sort("CONTENTCOMPLETE")],sort("Stat"),attrs([term(cons("COMPLETION-Stat"))]))])),context-free-syntax([prod([sort("Exp"),lit(";")],sort("Stat"),attrs([term(cons("Exp"))])),prod([lit("{"),iter-star(sort("Stat")),lit("}")],sort("Stat"),attrs([term(cons("Block"))])),prod([lit("("),iter-star(sort("Stat")),lit(")")],sort("Stat"),attrs([term(cons("Seq"))]))])),context-free-syntax([prod([sort("CONTENTCOMPLETE")],sort("Stat"),attrs([term(cons("COMPLETION-Stat"))]))])),context-free-syntax([prod([lit("if"),lit("("),sort("Exp"),lit(")"),lit("{"),iter-star(sort("Stat")),iter-star(sort("ElseIf")),opt(sort("Else")),lit("}")],sort("Stat"),attrs([term(cons("IfElse"))])),prod([lit("}"),lit("else"),lit("if"),lit("("),sort("Exp"),lit(")"),lit("{"),iter-star(sort("Stat"))],sort("ElseIf"),attrs([term(cons("ElseIf"))])),prod([lit("}"),lit("else"),lit("{"),iter-star(sort("Stat"))],sort("Else"),attrs([term(cons("Else"))])),prod([lit("while"),lit("("),sort("Exp"),lit(")"),lit("{"),iter-star(sort("Stat")),lit("}")],sort("Stat"),attrs([term(cons("While"))]))])),context-free-syntax([prod([sort("CONTENTCOMPLETE")],sort("ElseIf"),attrs([term(cons("COMPLETION-ElseIf"))])),prod([sort("CONTENTCOMPLETE")],sort("Else"),attrs([term(cons("COMPLETION-Else"))])),prod([sort("CONTENTCOMPLETE")],sort("Stat"),attrs([term(cons("COMPLETION-Stat"))]))])),context-free-syntax([prod([lit("var"),sort("ID"),lit(":"),sort("Type"),lit(";")],sort("Stat"),attrs([term(cons("VarDecl"))])),prod([lit("var"),sort("ID"),lit(":"),sort("Type"),lit(":="),sort("Exp"),lit(";")],sort("Stat"),attrs([term(cons("VarDeclInit"))])),prod([sort("ID")],sort("Exp"),attrs([term(cons("Var"))])),prod([sort("Exp"),lit(":="),sort("Exp"),lit(";")],sort("Stat"),attrs([term(cons("Assign"))]))])),context-free-syntax([prod([sort("CONTENTCOMPLETE")],sort("Exp"),attrs([term(cons("COMPLETION-Exp"))])),prod([sort("CONTENTCOMPLETE")],sort("Stat"),attrs([term(cons("COMPLETION-Stat"))]))])),context-free-syntax([prod([lit("("),sort("Exp"),lit(")")],sort("Exp"),attrs([bracket])),prod([lit("true")],sort("Exp"),attrs([term(cons("True"))])),prod([lit("false")],sort("Exp"),attrs([term(cons("False"))])),prod([lit("!"),sort("Exp")],sort("Exp"),attrs([term(cons("Not"))])),prod([sort("Exp"),lit("&&"),sort("Exp")],sort("Exp"),attrs([term(cons("And")),assoc(left)])),prod([sort("Exp"),lit("||"),sort("Exp")],sort("Exp"),attrs([term(cons("Or")),assoc(left)]))])),context-free-syntax([prod([sort("CONTENTCOMPLETE")],sort("Exp"),attrs([term(cons("COMPLETION-Exp"))]))])),context-free-syntax([prod([sort("INT")],sort("Exp"),attrs([term(cons("Int"))])),prod([sort("Exp"),lit("+"),sort("Exp")],sort("Exp"),attrs([term(cons("Plus")),assoc(left)])),prod([sort("Exp"),lit("-"),sort("Exp")],sort("Exp"),attrs([term(cons("Minus")),assoc(left)])),prod([sort("Exp"),lit("*"),sort("Exp")],sort("Exp"),attrs([term(cons("Mul")),assoc(left)])),prod([sort("Exp"),lit("=="),sort("Exp")],sort("Exp"),attrs([term(cons("Eq")),assoc(non-assoc)])),prod([sort("Exp"),lit("<"),sort("Exp")],sort("Exp"),attrs([term(cons("Lt")),assoc(non-assoc)])),prod([sort("Exp"),lit(">"),sort("Exp")],sort("Exp"),attrs([term(cons("Gt")),assoc(non-assoc)])),prod([sort("Exp"),lit("<="),sort("Exp")],sort("Exp"),attrs([term(cons("Leq")),assoc(non-assoc)])),prod([sort("Exp"),lit(">="),sort("Exp")],sort("Exp"),attrs([term(cons("Geq")),assoc(non-assoc)]))])),context-free-syntax([prod([sort("CONTENTCOMPLETE")],sort("Exp"),attrs([term(cons("COMPLETION-Exp"))]))])),context-free-syntax([prod([sort("STRING")],sort("Exp"),attrs([term(cons("String"))]))])),context-free-syntax([prod([sort("CONTENTCOMPLETE")],sort("Exp"),attrs([term(cons("COMPLETION-Exp"))]))])),context-free-syntax([])))]),module(unparameterized("Common"),[],[exports(conc-grammars(conc-grammars(lexical-syntax([prod([char-class(simple-charclass(present(conc(range(short("a"),short("z")),range(short("A"),short("Z")))))),iter-star(char-class(simple-charclass(present(conc(range(short("a"),short("z")),conc(range(short("A"),short("Z")),range(short("0"),short("9"))))))))],sort("ID"),attrs([])),prod([opt(lit("-")),iter(char-class(simple-charclass(present(range(short("0"),short("9"))))))],sort("INT"),attrs([])),prod([lit("\\\""),iter-star(sort("StringChar")),lit("\\\"")],sort("STRING"),attrs([])),prod([char-class(comp(simple-charclass(present(conc(short("\\\""),short("\\n"))))))],sort("StringChar"),attrs([])),prod([lit("\\\\\\\"")],sort("StringChar"),attrs([])),prod([sort("BackSlashChar")],sort("StringChar"),attrs([])),prod([lit("\\\\")],sort("BackSlashChar"),attrs([])),prod([char-class(simple-charclass(present(conc(short("\\ "),conc(short("\\t"),conc(short("\\n"),short("\\r")))))))],layout,attrs([])),prod([char-class(simple-charclass(present(short("\\*"))))],sort("CommentChar"),attrs([])),prod([lit("/*"),iter-star(alt(char-class(comp(simple-charclass(present(short("\\*"))))),sort("CommentChar"))),lit("*/")],layout,attrs([])),prod([lit("//"),iter-star(char-class(comp(simple-charclass(present(conc(short("\\n"),short("\\r"))))))),alt(char-class(simple-charclass(present(conc(short("\\n"),short("\\r"))))),sort("EOF"))],layout,attrs([])),prod([],sort("EOF"),attrs([]))]),lexical-restrictions([follow([sort("CommentChar")],single(char-class(simple-charclass(present(short("\\/")))))),follow([sort("INT")],single(char-class(simple-charclass(present(range(short("0"),short("9"))))))),follow([sort("ID")],single(char-class(simple-charclass(present(conc(range(short("a"),short("z")),conc(range(short("A"),short("Z")),conc(range(short("0"),short("9")),short("\\_"))))))))),follow([sort("EOF")],single(char-class(comp(simple-charclass(absent))))),follow([sort("BackSlashChar")],single(char-class(simple-charclass(present(short("\\\""))))))])),context-free-restrictions([follow([opt(layout)],single(char-class(simple-charclass(present(conc(short("\\ "),conc(short("\\t"),conc(short("\\n"),short("\\r"))))))))),follow([opt(layout)],single(seq(simple-charclass(present(short("\\/"))),single(char-class(simple-charclass(present(short("\\/")))))))),follow([opt(layout)],single(seq(simple-charclass(present(short("\\/"))),single(char-class(simple-charclass(present(short("\\*"))))))))])))]),module(unparameterized("Enfun"),[imports([module(unparameterized("Common"))]),imports([module(unparameterized("Enfungenerated"))])],[exports(conc-grammars(conc-grammars(context-free-start-symbols([sort("Start"),sort("Definition"),sort("Exp"),sort("Property"),sort("Stat")]),context-free-syntax([prod([sort("Module")],sort("Start"),attrs([]))])),lexical-syntax([prod([alt(lit("true"),alt(lit("false"),alt(lit("new"),lit("return"))))],sort("Keyword"),attrs([])),prod([sort("Keyword")],sort("ID"),attrs([reject]))])))]),module(unparameterized("Stratego-Sugar-Overlays"),[imports([module(unparameterized("Stratego-Core-Identifiers")),module(unparameterized("Stratego-Sugar-Terms"))])],[exports(conc-grammars(sorts([sort("Overlay")]),context-free-syntax([prod([sort("Id"),lit("="),sort("Term")],sort("Overlay"),attrs([term(cons("OverlayNoArgs"))])),prod([sort("Id"),lit("("),iter-star-sep(sort("Id"),lit(",")),lit(")"),lit("="),sort("Term")],sort("Overlay"),attrs([term(cons("Overlay"))]))])))]),module(unparameterized("Stratego-Sugar-DynamicRules"),[imports([module(unparameterized("Stratego-Core-Identifiers")),module(unparameterized("Stratego-Sugar-Strategies")),module(unparameterized("Stratego-Sugar-Rules"))])],[exports(conc-grammars(conc-grammars(conc-grammars(conc-grammars(conc-grammars(conc-grammars(conc-grammars(conc-grammars(conc-grammars(conc-grammars(sorts([sort("ScopeLabels")]),context-free-syntax([prod([lit("{|"),sort("ScopeLabels"),lit(":"),sort("Strategy"),lit("|}")],sort("Strategy"),attrs([term(cons("DynRuleScope"))])),prod([iter-star-sep(sort("DynRuleScopeId"),lit(","))],sort("ScopeLabels"),attrs([])),prod([lit("~"),sort("Term")],sort("ScopeLabels"),attrs([term(cons("ScopeLabels"))]))])),sorts([sort("DynRuleDef"),sort("DynRuleId"),sort("DynRuleScopeId"),sort("RuleDec")])),context-free-syntax([prod([lit("rules"),lit("("),iter-star(sort("DynRuleDef")),lit(")")],sort("Strategy"),attrs([term(cons("GenDynRules"))])),prod([sort("Id"),lit("+"),sort("Term")],sort("DynRuleDef"),attrs([term(cons("AddScopeLabel"))])),prod([sort("DynRuleId"),lit(":-"),sort("Term")],sort("DynRuleDef"),attrs([term(cons("UndefineDynRule"))])),prod([sort("DynRuleId"),lit(":"),sort("Rule")],sort("DynRuleDef"),attrs([term(cons("SetDynRule"))])),prod([sort("DynRuleId"),lit(":+"),sort("Rule")],sort("DynRuleDef"),attrs([term(cons("AddDynRule"))])),prod([sort("DynRuleId"),lit(":"),sort("Term")],sort("DynRuleDef"),attrs([term(cons("SetDynRuleMatch"))])),prod([sort("DynRuleId"),lit(":="),sort("Term")],sort("DynRuleDef"),attrs([term(cons("DynRuleAssign"))])),prod([sort("DynRuleId"),lit(":+="),sort("Term")],sort("DynRuleDef"),attrs([term(cons("DynRuleAssignAdd"))])),prod([sort("DynRuleId"),lit(":"),sort("Rule"),lit("depends"),lit("on"),sort("Term")],sort("DynRuleDef"),attrs([term(cons("SetDynRuleDepends"))])),prod([sort("RuleDec"),lit("."),sort("Term")],sort("DynRuleId"),attrs([term(cons("LabeledDynRuleId"))])),prod([sort("RuleDec"),lit("+"),sort("Term")],sort("DynRuleId"),attrs([term(cons("AddLabelDynRuleId"))])),prod([sort("RuleDec")],sort("DynRuleId"),attrs([term(cons("DynRuleId"))])),prod([sort("Id"),lit("."),sort("Term")],sort("DynRuleScopeId"),attrs([term(cons("LabeledDynRuleScopeId"))])),prod([sort("Id")],sort("DynRuleScopeId"),attrs([term(cons("DynRuleScopeId"))]))])),context-free-syntax([prod([sort("Id")],sort("RuleDec"),attrs([term(cons("RDecNoArgs"))])),prod([sort("Id"),lit("("),iter-star-sep(sort("Typedid"),lit(",")),lit(")")],sort("RuleDec"),attrs([term(cons("RDec"))])),prod([sort("Id"),lit("("),iter-star-sep(sort("Typedid"),lit(",")),lit("|"),iter-star-sep(sort("Typedid"),lit(",")),lit(")")],sort("RuleDec"),attrs([term(cons("RDecT"))]))])),sorts([sort("RuleNames")])),context-free-syntax([prod([iter-star-sep(sort("Id"),lit(","))],sort("RuleNames"),attrs([])),prod([lit("~"),sort("Term")],sort("RuleNames"),attrs([term(cons("RuleNames"))])),prod([lit("/"),sort("RuleNames"),lit("\\\\*"),sort("Strategy")],sort("Strategy"),attrs([term(cons("DynRuleIntersectFix"))]))])),syntax([prod([lit("\\\\"),cf(opt(layout)),cf(sort("RuleNames")),lit("/*"),cf(opt(layout)),cf(sort("Strategy"))],cf(sort("Strategy")),attrs([term(cons("DynRuleUnionFix"))])),prod([lit("\\\\"),cf(opt(layout)),cf(sort("RuleNames")),lit(" /*"),cf(opt(layout)),cf(sort("Strategy"))],cf(sort("Strategy")),attrs([term(cons("DynRuleUnionFix"))])),prod([lit("/"),cf(opt(layout)),cf(sort("RuleNames")),cf(opt(layout)),lit("\\\\"),cf(opt(layout)),cf(sort("RuleNames")),lit("/*"),cf(opt(layout)),cf(sort("Strategy"))],cf(sort("Strategy")),attrs([term(cons("DynRuleIntersectUnionFix"))])),prod([lit("/"),cf(opt(layout)),cf(sort("RuleNames")),cf(opt(layout)),lit("\\\\"),cf(opt(layout)),cf(sort("RuleNames")),lit(" /*"),cf(opt(layout)),cf(sort("Strategy"))],cf(sort("Strategy")),attrs([term(cons("DynRuleIntersectUnionFix"))]))])),context-free-syntax([prod([sort("Strategy"),lit("/"),sort("RuleNames"),lit("\\\\"),sort("Strategy")],sort("Strategy"),attrs([term(cons("DynRuleIntersect")),assoc(right)])),prod([sort("Strategy"),lit("\\\\"),sort("RuleNames"),lit("/"),sort("Strategy")],sort("Strategy"),attrs([term(cons("DynRuleUnion")),assoc(right)])),prod([sort("Strategy"),lit("/"),sort("RuleNames"),lit("\\\\"),sort("RuleNames"),lit("/"),sort("Strategy")],sort("Strategy"),attrs([term(cons("DynRuleIntersectUnion")),assoc(right)]))])),priorities([chain([simple-group(prod([cf(sort("StrategyAngle")),cf(opt(layout)),cf(sort("Term"))],cf(sort("Strategy")),attrs([term(cons("BA"))]))),prods-group([prod([lit("\\\\"),cf(opt(layout)),cf(sort("RuleNames")),lit("/*"),cf(opt(layout)),cf(sort("Strategy"))],cf(sort("Strategy")),attrs([term(cons("DynRuleUnionFix"))])),prod([lit("\\\\"),cf(opt(layout)),cf(sort("RuleNames")),lit(" /*"),cf(opt(layout)),cf(sort("Strategy"))],cf(sort("Strategy")),attrs([term(cons("DynRuleUnionFix"))])),prod([lit("/"),cf(opt(layout)),cf(sort("RuleNames")),cf(opt(layout)),lit("\\\\"),cf(opt(layout)),cf(sort("RuleNames")),lit("/*"),cf(opt(layout)),cf(sort("Strategy"))],cf(sort("Strategy")),attrs([term(cons("DynRuleIntersectUnionFix"))])),prod([lit("/"),cf(opt(layout)),cf(sort("RuleNames")),cf(opt(layout)),lit("\\\\"),cf(opt(layout)),cf(sort("RuleNames")),lit(" /*"),cf(opt(layout)),cf(sort("Strategy"))],cf(sort("Strategy")),attrs([term(cons("DynRuleIntersectUnionFix"))]))]),simple-group(prod([cf(sort("Strategy")),cf(opt(layout)),lit("=>"),cf(opt(layout)),cf(sort("Term"))],cf(sort("Strategy")),attrs([term(cons("AM"))])))])])),context-free-priorities([chain([simple-group(prod([sort("StrategyAngle"),sort("Term")],sort("Strategy"),attrs([term(cons("BA"))]))),simple-group(prod([lit("/"),sort("RuleNames"),lit("\\\\*"),sort("Strategy")],sort("Strategy"),attrs([term(cons("DynRuleIntersectFix"))]))),simple-group(prod([sort("Strategy"),lit("=>"),sort("Term")],sort("Strategy"),attrs([term(cons("AM"))]))),simple-group(prod([sort("Strategy"),lit("/"),sort("RuleNames"),lit("\\\\"),sort("Strategy")],sort("Strategy"),attrs([term(cons("DynRuleIntersect")),assoc(right)]))),simple-group(prod([sort("Strategy"),lit("\\\\"),sort("RuleNames"),lit("/"),sort("Strategy")],sort("Strategy"),attrs([term(cons("DynRuleUnion")),assoc(right)]))),simple-group(prod([sort("Strategy"),lit("/"),sort("RuleNames"),lit("\\\\"),sort("RuleNames"),lit("/"),sort("Strategy")],sort("Strategy"),attrs([term(cons("DynRuleIntersectUnion")),assoc(right)]))),simple-group(prod([sort("Strategy"),lit(";"),sort("Strategy")],sort("Strategy"),attrs([term(cons("Seq")),assoc(right)])))])])))]),module(unparameterized("Stratego-Sugar-Rules"),[imports([module(unparameterized("Stratego-Sugar-Strategies"))])],[exports(conc-grammars(conc-grammars(conc-grammars(sorts([sort("RuleDef")]),context-free-syntax([prod([sort("Id"),lit(":"),sort("Rule")],sort("RuleDef"),attrs([term(cons("RDefNoArgs"))])),prod([iter(sort("Anno")),sort("RuleDef")],sort("Def"),attrs([term(cons("AnnoDef"))])),prod([sort("Id"),lit("("),iter-star-sep(sort("Typedid"),lit(",")),lit(")"),lit(":"),sort("Rule")],sort("RuleDef"),attrs([term(cons("RDef"))])),prod([sort("Id"),lit("("),iter-star-sep(sort("Typedid"),lit(",")),lit("|"),iter-star-sep(sort("Typedid"),lit(",")),lit(")"),lit(":"),sort("Rule")],sort("RuleDef"),attrs([term(cons("RDefT"))]))])),sorts([sort("Rule"),sort("RuleCond")])),context-free-syntax([prod([sort("Term"),lit("->"),sort("Term")],sort("Rule"),attrs([term(cons("RuleNoCond"))])),prod([sort("Term"),lit("->"),sort("Term"),lit("where"),sort("Strategy")],sort("Rule"),attrs([term(cons("Rule"))])),prod([sort("Term"),lit("->"),sort("Term"),iter(sort("RuleCond"))],sort("Rule"),attrs([term(cons("Rule")),avoid])),prod([lit("where"),sort("Strategy")],sort("RuleCond"),attrs([term(cons("WhereClause"))])),prod([lit("with"),sort("Strategy")],sort("RuleCond"),attrs([term(cons("WithClause"))]))])))]),module(unparameterized("Stratego-Sugar-Strategies"),[imports([module(unparameterized("Stratego-Core-Strategies")),module(unparameterized("Stratego-Sugar-Terms")),module(unparameterized("Stratego-Sugar-Constants")),module(unparameterized("Stratego-Sugar-Signatures"))])],[exports(conc-grammars(conc-grammars(conc-grammars(conc-grammars(conc-grammars(conc-grammars(conc-grammars(conc-grammars(conc-grammars(context-free-syntax([prod([sort("Id"),lit("="),sort("Strategy")],sort("StrategyDef"),attrs([term(cons("SDefNoArgs"))])),prod([sort("Id"),lit("("),iter-star-sep(sort("Typedid"),lit(",")),lit(")"),lit("="),sort("Strategy")],sort("StrategyDef"),attrs([term(cons("SDef"))]))]),context-free-syntax([prod([sort("ID")],sort("Typedid"),attrs([term(cons("DefaultVarDec"))]))])),sorts([sort("Rule")])),sorts([sort("StrategyParen"),sort("StrategyCurly"),sort("StrategyAngle")])),context-free-syntax([prod([sort("SVar"),lit("("),iter-star-sep(sort("Strategy"),lit(",")),lit(")")],sort("Strategy"),attrs([term(cons("Call"))])),prod([lit("{"),sort("Strategy"),lit("}")],sort("Strategy"),attrs([term(cons("ScopeDefault"))])),prod([sort("StrategyAngle"),sort("Term")],sort("Strategy"),attrs([term(cons("BA"))])),prod([lit("<"),sort("Strategy"),lit(">")],sort("StrategyAngle"),attrs([bracket])),prod([sort("Strategy"),lit("<+"),sort("Strategy")],sort("Strategy"),attrs([term(cons("LChoice")),assoc(right)])),prod([lit("rec"),sort("Id"),lit("("),sort("Strategy"),lit(")")],sort("Strategy"),attrs([term(cons("Rec"))])),prod([lit("not"),lit("("),sort("Strategy"),lit(")")],sort("Strategy"),attrs([term(cons("Not"))])),prod([lit("where"),lit("("),sort("Strategy"),lit(")")],sort("Strategy"),attrs([term(cons("Where"))])),prod([lit("with"),lit("("),sort("Strategy"),lit(")")],sort("Strategy"),attrs([term(cons("With")),prefer])),prod([lit("test"),lit("("),sort("Strategy"),lit(")")],sort("Strategy"),attrs([term(cons("Test"))])),prod([lit("prim"),lit("("),sort("String"),lit(")")],sort("Strategy"),attrs([term(cons("PrimNoArgs"))])),prod([lit("prim"),lit("("),sort("String"),lit(","),iter-star-sep(sort("Term"),lit(",")),lit(")")],sort("Strategy"),attrs([term(cons("Prim"))])),prod([sort("String")],sort("Strategy"),attrs([term(cons("StrCong"))])),prod([sort("Int")],sort("Strategy"),attrs([term(cons("IntCong"))])),prod([sort("Real")],sort("Strategy"),attrs([term(cons("RealCong"))])),prod([sort("Char")],sort("Strategy"),attrs([term(cons("CharCong"))])),prod([sort("String"),lit("("),iter-star-sep(sort("Strategy"),lit(",")),lit(")")],sort("Strategy"),attrs([term(cons("CongQ"))])),prod([sort("Strategy"),sort("StrategyCurly")],sort("Strategy"),attrs([term(cons("AnnoCong"))])),prod([lit("{"),sort("Strategy"),lit("}")],sort("StrategyCurly"),attrs([term(cons("StrategyCurly"))])),prod([lit("("),lit(")")],sort("Strategy"),attrs([term(cons("EmptyTupleCong"))])),prod([lit("("),sort("Strategy"),lit(")")],sort("Strategy"),attrs([bracket])),prod([lit("("),sort("Strategy"),lit(","),iter-sep(sort("Strategy"),lit(",")),lit(")")],sort("Strategy"),attrs([term(cons("TupleCong"))])),prod([lit("["),iter-star-sep(sort("Strategy"),lit(",")),lit("]")],sort("Strategy"),attrs([term(cons("ListCongNoTail"))])),prod([lit("["),iter-star-sep(sort("Strategy"),lit(",")),lit("|"),sort("Strategy"),lit("]")],sort("Strategy"),attrs([term(cons("ListCong"))])),prod([sort("Strategy"),lit("#"),sort("StrategyParen")],sort("Strategy"),attrs([term(cons("ExplodeCong"))]))])),sorts([sort("SwitchCase")])),context-free-syntax([prod([sort("SVar")],sort("Strategy"),attrs([term(cons("CallNoArgs"))])),prod([lit("\\\\"),sort("Rule"),lit("\\\\")],sort("Strategy"),attrs([term(cons("LRule"))])),prod([lit("("),sort("Rule"),lit(")")],sort("Strategy"),attrs([term(cons("SRule"))])),prod([sort("Strategy"),lit("+"),sort("Strategy")],sort("Strategy"),attrs([term(cons("Choice")),assoc(right)])),prod([sort("Strategy"),lit("+>"),sort("Strategy")],sort("Strategy"),attrs([term(cons("RChoice")),assoc(right)])),prod([lit("proceed")],sort("Strategy"),attrs([term(cons("ProceedNoArgs")),prefer])),prod([lit("proceed"),lit("("),iter-sep(sort("Strategy"),lit(",")),lit(")")],sort("Strategy"),attrs([term(cons("Proceed")),prefer])),prod([lit("if"),sort("Strategy"),lit("then"),sort("Strategy"),lit("else"),sort("Strategy"),lit("end")],sort("Strategy"),attrs([term(cons("CondChoice"))])),prod([lit("if"),sort("Strategy"),lit("then"),sort("Strategy"),lit("end")],sort("Strategy"),attrs([term(cons("IfThen"))])),prod([lit("switch"),sort("Strategy"),iter-star(sort("SwitchCase")),lit("end")],sort("Strategy"),attrs([term(cons("SwitchChoiceNoOtherwise"))])),prod([lit("switch"),sort("Strategy"),iter-star(sort("SwitchCase")),lit("otherwise"),lit(":"),sort("Strategy"),lit("end")],sort("Strategy"),attrs([term(cons("SwitchChoice"))])),prod([lit("case"),sort("Strategy"),lit(":"),sort("Strategy")],sort("SwitchCase"),attrs([term(cons("SwitchCase"))])),prod([sort("Strategy"),lit("=>"),sort("Term")],sort("Strategy"),attrs([term(cons("AM"))])),prod([sort("Term"),lit(":="),sort("Term")],sort("Strategy"),attrs([term(cons("Assign"))]))])),context-free-priorities([chain([prods-group([prod([sort("Strategy"),sort("StrategyCurly")],sort("Strategy"),attrs([])),prod([sort("Strategy"),lit("#"),sort("StrategyParen")],sort("Strategy"),attrs([]))]),prods-group([prod([lit("!"),sort("Term")],sort("Strategy"),attrs([])),prod([lit("?"),sort("Term")],sort("Strategy"),attrs([]))]),simple-group(prod([sort("StrategyAngle"),sort("Term")],sort("Strategy"),attrs([]))),simple-group(prod([sort("Strategy"),lit("=>"),sort("Term")],sort("Strategy"),attrs([]))),simple-group(prod([sort("Strategy"),lit(";"),sort("Strategy")],sort("Strategy"),attrs([]))),assoc-group(right,[prod([sort("Strategy"),lit("+"),sort("Strategy")],sort("Strategy"),attrs([])),prod([sort("Strategy"),lit("<+"),sort("Strategy")],sort("Strategy"),attrs([])),prod([sort("Strategy"),lit("+>"),sort("Strategy")],sort("Strategy"),attrs([])),prod([sort("Strategy"),lit("<"),sort("StrategyMid"),lit("+"),sort("Strategy")],sort("Strategy"),attrs([]))])])])),context-free-priorities([chain([simple-group(prod([sort("Strategy")],sort("StrategyMid"),attrs([]))),simple-group(prod([sort("Strategy"),lit("+"),sort("Strategy")],sort("Strategy"),attrs([])))])])),context-free-priorities([chain([non-transitive(prods-group([prod([sort("Strategy"),sort("StrategyCurly")],sort("Strategy"),attrs([])),prod([sort("Strategy"),lit("#"),sort("StrategyParen")],sort("Strategy"),attrs([]))])),simple-group(prod([sort("Term"),lit(":="),sort("Term")],sort("Strategy"),attrs([])))])])))]),module(unparameterized("Stratego-Sugar-Terms"),[imports([module(unparameterized("Stratego-Core-Terms")),module(unparameterized("Stratego-Sugar-Strategies"))])],[exports(conc-grammars(conc-grammars(conc-grammars(sorts([sort("LID")]),context-free-syntax([prod([sort("LId")],sort("LID"),attrs([term(cons("ListVar"))])),prod([sort("LID")],sort("Var"),attrs([term(cons("Var"))])),prod([sort("LID")],sort("ID"),attrs([]))])),context-free-syntax([prod([lit("_"),sort("PreTerm")],sort("PreTerm"),attrs([term(cons("BuildDefaultPT"))])),prod([lit("_"),sort("Term")],sort("Term"),attrs([term(cons("BuildDefault")),prefer])),prod([sort("Char")],sort("PreTerm"),attrs([term(cons("Char"))])),prod([sort("PreTerm"),lit("{"),iter-star-sep(sort("Term"),lit(",")),lit("}")],sort("Term"),attrs([term(cons("AnnoList"))])),prod([sort("PreTerm")],sort("Term"),attrs([term(cons("NoAnnoList"))])),prod([lit("<"),sort("Strategy"),lit(">"),sort("Term")],sort("PreTerm"),attrs([term(cons("App"))])),prod([lit("<"),sort("Strategy"),lit(">"),sort("Term")],sort("Term"),attrs([term(cons("App")),prefer])),prod([sort("StrategyAngle")],sort("PreTerm"),attrs([term(cons("RootApp"))])),prod([sort("StrategyAngle")],sort("Term"),attrs([term(cons("RootApp")),prefer])),prod([lit("("),iter-star-sep(sort("Term"),lit(",")),lit(")")],sort("PreTerm"),attrs([term(cons("Tuple"))])),prod([lit("["),iter-star-sep(sort("Term"),lit(",")),lit("]")],sort("PreTerm"),attrs([term(cons("List"))])),prod([lit("["),iter-star-sep(sort("Term"),lit(",")),lit("|"),sort("Term"),lit("]")],sort("PreTerm"),attrs([term(cons("ListTail"))]))])),context-free-priorities([chain([simple-group(prod([sort("Term"),lit("#"),lit("("),sort("Term"),lit(")")],sort("PreTerm"),attrs([term(cons("Explode"))]))),simple-group(prod([sort("PreTerm"),lit("{"),iter-star-sep(sort("Term"),lit(",")),lit("}")],sort("Term"),attrs([term(cons("AnnoList"))]))),simple-group(prod([sort("Var"),lit("@"),sort("Term")],sort("Term"),attrs([term(cons("As"))])))])])))]),module(unparameterized("Stratego-Sugar-Signatures"),[imports([module(unparameterized("Stratego-Core-Signatures")),module(unparameterized("Stratego-Sugar-Constants"))])],[exports(conc-grammars(conc-grammars(conc-grammars(sorts([sort("Sort")]),context-free-syntax([prod([lit("["),iter-star-sep(sort("Sort"),lit(",")),lit("]")],sort("Sort"),attrs([term(cons("SortList"))])),prod([lit("["),iter-star-sep(sort("Sort"),lit(",")),lit("|"),sort("Sort"),lit("]")],sort("Sort"),attrs([term(cons("SortListTl"))])),prod([lit("("),iter-star-sep(sort("Sort"),lit(",")),lit(")")],sort("Sort"),attrs([term(cons("SortTuple"))]))])),sorts([sort("Kind")])),context-free-syntax([prod([lit("*")],sort("Kind"),attrs([term(cons("Star"))])),prod([lit("**")],sort("Kind"),attrs([term(cons("StarStar"))]))])))]),module(unparameterized("Stratego-Core-Signatures"),[imports([module(unparameterized("Stratego-Core-Identifiers")),module(unparameterized("Stratego-Core-Constants"))])],[exports(conc-grammars(conc-grammars(conc-grammars(conc-grammars(conc-grammars(conc-grammars(conc-grammars(conc-grammars(conc-grammars(sorts([sort("Sdecl")]),context-free-syntax([prod([lit("sorts"),iter-star(sort("Sort"))],sort("Sdecl"),attrs([term(cons("Sorts"))])),prod([lit("constructors"),iter-star(sort("Opdecl"))],sort("Sdecl"),attrs([term(cons("Constructors"))]))])),sorts([sort("Sort")])),context-free-syntax([prod([sort("LCID")],sort("Sort"),attrs([term(cons("SortVar"))])),prod([sort("UCID")],sort("Sort"),attrs([term(cons("SortNoArgs"))])),prod([sort("Id"),lit("("),iter-star-sep(sort("Sort"),lit(",")),lit(")")],sort("Sort"),attrs([term(cons("Sort"))]))])),sorts([sort("Opdecl")])),context-free-syntax([prod([sort("Id"),lit(":"),sort("Type")],sort("Opdecl"),attrs([term(cons("OpDecl"))])),prod([sort("String"),lit(":"),sort("Type")],sort("Opdecl"),attrs([term(cons("OpDeclQ"))])),prod([lit(":"),sort("Type")],sort("Opdecl"),attrs([term(cons("OpDeclInj"))]))])),context-free-syntax([prod([lit("external"),sort("Id"),lit(":"),sort("Type")],sort("Opdecl"),attrs([term(cons("ExtOpDecl"))])),prod([lit("external"),sort("String"),lit(":"),sort("Type")],sort("Opdecl"),attrs([term(cons("ExtOpDeclQ"))])),prod([lit("external"),lit(":"),sort("Type")],sort("Opdecl"),attrs([term(cons("ExtOpDeclInj"))]))])),sorts([sort("Type"),sort("ArgType"),sort("ConstType"),sort("FunType"),sort("RetType")])),context-free-syntax([prod([sort("Sort")],sort("ConstType"),attrs([term(cons("ConstType"))])),prod([iter-sep(sort("ArgType"),lit("*")),lit("->"),sort("RetType")],sort("FunType"),attrs([term(cons("FunType"))])),prod([lit("("),sort("Type"),lit(")")],sort("ArgType"),attrs([bracket])),prod([sort("ConstType")],sort("ArgType"),attrs([])),prod([sort("Type")],sort("RetType"),attrs([])),prod([sort("FunType")],sort("RetType"),attrs([reject])),prod([sort("FunType")],sort("Type"),attrs([])),prod([sort("ConstType")],sort("Type"),attrs([]))])),context-free-restrictions([follow([sort("Sort")],single(char-class(simple-charclass(present(short("\\("))))))])))]),module(unparameterized("Stratego-Core-Terms"),[imports([module(unparameterized("Stratego-Core-Identifiers")),module(unparameterized("Stratego-Core-Constants"))])],[exports(conc-grammars(conc-grammars(conc-grammars(conc-grammars(sorts([sort("ID"),sort("Var"),sort("Wld")]),context-free-syntax([prod([sort("Id")],sort("Var"),attrs([term(cons("Var"))])),prod([sort("Id")],sort("ID"),attrs([]))])),sorts([sort("Term"),sort("PreTerm")])),context-free-syntax([prod([sort("Var")],sort("PreTerm"),attrs([])),prod([sort("Var")],sort("Term"),attrs([prefer])),prod([lit("_")],sort("Wld"),attrs([term(cons("Wld"))])),prod([sort("Wld")],sort("PreTerm"),attrs([])),prod([sort("Wld")],sort("Term"),attrs([prefer])),prod([sort("Int")],sort("PreTerm"),attrs([term(cons("Int"))])),prod([sort("Real")],sort("PreTerm"),attrs([term(cons("Real"))])),prod([sort("String")],sort("PreTerm"),attrs([term(cons("Str"))])),prod([sort("Id"),lit("("),iter-star-sep(sort("Term"),lit(",")),lit(")")],sort("PreTerm"),attrs([term(cons("Op"))])),prod([sort("String"),lit("("),iter-star-sep(sort("Term"),lit(",")),lit(")")],sort("PreTerm"),attrs([term(cons("OpQ"))])),prod([sort("Term"),lit("#"),lit("("),sort("Term"),lit(")")],sort("PreTerm"),attrs([term(cons("Explode"))])),prod([sort("PreTerm"),lit("{^"),sort("PreTerm"),lit("}")],sort("Term"),attrs([term(cons("Anno"))])),prod([sort("Var"),lit("@"),sort("Term")],sort("Term"),attrs([term(cons("As")),prefer])),prod([sort("Var"),lit("@"),sort("PreTerm")],sort("PreTerm"),attrs([term(cons("As"))]))])),context-free-priorities([chain([simple-group(prod([sort("Term"),lit("#"),lit("("),sort("Term"),lit(")")],sort("PreTerm"),attrs([term(cons("Explode"))]))),simple-group(prod([sort("Var"),lit("@"),sort("Term")],sort("Term"),attrs([term(cons("As"))])))])])))]),module(unparameterized("Stratego-Core-Strategies"),[imports([module(unparameterized("Stratego-Core-Terms")),module(unparameterized("Stratego-Core-Constants")),module(unparameterized("Stratego-Core-Signatures"))])],[exports(conc-grammars(conc-grammars(conc-grammars(conc-grammars(conc-grammars(conc-grammars(conc-grammars(conc-grammars(conc-grammars(conc-grammars(conc-grammars(conc-grammars(conc-grammars(conc-grammars(conc-grammars(sorts([sort("Def")]),context-free-syntax([prod([sort("StrategyDef")],sort("Def"),attrs([])),prod([sort("Id")],sort("SVar"),attrs([term(cons("SVar"))])),prod([lit("let"),iter-star(sort("Def")),lit("in"),sort("Strategy"),lit("end")],sort("Strategy"),attrs([term(cons("Let"))])),prod([sort("SVar"),lit("("),iter-star-sep(sort("Strategy"),lit(",")),lit("|"),iter-star-sep(sort("Term"),lit(",")),lit(")")],sort("Strategy"),attrs([term(cons("CallT"))])),prod([lit("call"),lit("("),sort("Term"),lit("|"),iter-star-sep(sort("Strategy"),lit(",")),lit("|"),iter-star-sep(sort("Term"),lit(",")),lit(")")],sort("Strategy"),attrs([term(cons("CallDynamic"))]))])),sorts([sort("StrategyDef")])),context-free-syntax([prod([sort("Id"),lit("("),iter-star-sep(sort("Typedid"),lit(",")),lit("|"),iter-star-sep(sort("Typedid"),lit(",")),lit(")"),lit("="),sort("Strategy")],sort("StrategyDef"),attrs([term(cons("SDefT"))])),prod([iter(sort("Anno")),sort("StrategyDef")],sort("Def"),attrs([term(cons("AnnoDef"))])),prod([lit("external"),sort("Id"),lit("("),iter-star-sep(sort("Typedid"),lit(",")),lit("|"),iter-star-sep(sort("Typedid"),lit(",")),lit(")"),lit("="),sort("Strategy")],sort("StrategyDef"),attrs([term(cons("ExtSDefInl"))])),prod([lit("external"),sort("Id"),lit("("),iter-star-sep(sort("Typedid"),lit(",")),lit("|"),iter-star-sep(sort("Typedid"),lit(",")),lit(")")],sort("StrategyDef"),attrs([term(cons("ExtSDef"))])),prod([lit("external"),sort("EmptyId"),lit("("),iter-star-sep(sort("Typedid"),lit(",")),lit("|"),iter-star-sep(sort("Typedid"),lit(",")),lit(")")],sort("StrategyDef"),attrs([term(cons("ExtSDef"))]))])),sorts([sort("EmptyId")])),lexical-syntax([prod([],sort("EmptyId"),attrs([]))])),sorts([sort("Anno")])),context-free-syntax([prod([lit("extend")],sort("Anno"),attrs([term(cons("Extend"))])),prod([lit("override")],sort("Anno"),attrs([term(cons("Override"))])),prod([lit("internal")],sort("Anno"),attrs([term(cons("Internal"))]))])),lexical-syntax([prod([lit("extend")],sort("Keyword"),attrs([])),prod([lit("override")],sort("Keyword"),attrs([])),prod([lit("internal")],sort("Keyword"),attrs([])),prod([lit("sealed")],sort("Keyword"),attrs([])),prod([lit("extensible")],sort("Keyword"),attrs([])),prod([lit("overridable")],sort("Keyword"),attrs([]))])),lexical-restrictions([follow([lit("extend"),lit("override"),lit("internal"),lit("sealed"),lit("extensible"),lit("overridable")],single(char-class(simple-charclass(present(conc(range(short("a"),short("z")),conc(range(short("A"),short("Z")),conc(range(short("0"),short("9")),conc(short("\\'"),conc(short("\\-"),short("\\_")))))))))))])),sorts([sort("Typedid")])),context-free-syntax([prod([sort("ID"),lit(":"),sort("Type")],sort("Typedid"),attrs([term(cons("VarDec"))]))])),sorts([sort("Strategy"),sort("SVar"),sort("StrategyParen"),sort("StrategyMid")])),context-free-syntax([prod([lit("("),sort("Strategy"),lit(")")],sort("StrategyParen"),attrs([term(cons("ParenStrat"))])),prod([lit("fail")],sort("Strategy"),attrs([term(cons("Fail"))])),prod([lit("id")],sort("Strategy"),attrs([term(cons("Id"))])),prod([lit("proceed"),lit("("),iter-star-sep(sort("Strategy"),lit(",")),lit("|"),iter-star-sep(sort("Term"),lit(",")),lit(")")],sort("Strategy"),attrs([term(cons("ProceedT")),prefer])),prod([lit("proceed")],sort("Strategy"),attrs([term(cons("ProceedNoArgs")),prefer])),prod([lit("?"),sort("Term")],sort("Strategy"),attrs([term(cons("Match"))])),prod([lit("!"),sort("Term")],sort("Strategy"),attrs([term(cons("Build"))])),prod([lit("{"),iter-star-sep(sort("ID"),lit(",")),lit(":"),sort("Strategy"),lit("}")],sort("Strategy"),attrs([term(cons("Scope"))])),prod([sort("Strategy"),lit(";"),sort("Strategy")],sort("Strategy"),attrs([term(cons("Seq")),assoc(right)])),prod([sort("Strategy"),lit("<"),sort("StrategyMid"),lit("+"),sort("Strategy")],sort("Strategy"),attrs([term(cons("GuardedLChoice")),assoc(right)])),prod([sort("Strategy")],sort("StrategyMid"),attrs([])),prod([lit("prim"),lit("("),sort("String"),lit(","),iter-star-sep(sort("Strategy"),lit(",")),lit("|"),iter-star-sep(sort("Term"),lit(",")),lit(")")],sort("Strategy"),attrs([term(cons("PrimT"))])),prod([lit("some"),lit("("),sort("Strategy"),lit(")")],sort("Strategy"),attrs([term(cons("Some"))])),prod([lit("one"),lit("("),sort("Strategy"),lit(")")],sort("Strategy"),attrs([term(cons("One"))])),prod([lit("all"),lit("("),sort("Strategy"),lit(")")],sort("Strategy"),attrs([term(cons("All"))]))])),context-free-priorities([chain([prods-group([prod([lit("!"),sort("Term")],sort("Strategy"),attrs([term(cons("Build"))])),prod([lit("?"),sort("Term")],sort("Strategy"),attrs([term(cons("Match"))]))]),simple-group(prod([sort("Strategy"),lit(";"),sort("Strategy")],sort("Strategy"),attrs([term(cons("Seq")),assoc(right)]))),assoc-group(right,[prod([sort("Strategy"),lit("<"),sort("StrategyMid"),lit("+"),sort("Strategy")],sort("Strategy"),attrs([term(cons("GuardedLChoice")),assoc(right)]))])])])),context-free-syntax([prod([lit("import-term"),lit("("),sort("ModName"),lit(")")],sort("Strategy"),attrs([term(cons("ImportTerm"))]))])))]),module(unparameterized("Stratego-Core-Modules"),[imports([module(unparameterized("Stratego-Core-Identifiers")),module(unparameterized("Stratego-Core-Strategies")),module(unparameterized("Stratego-Core-Signatures"))])],[exports(conc-grammars(conc-grammars(conc-grammars(conc-grammars(conc-grammars(conc-grammars(sorts([sort("Module")]),context-free-syntax([prod([lit("module"),sort("ModName"),iter-star(sort("Decl"))],sort("Module"),attrs([term(cons("Module"))])),prod([lit("specification"),iter-star(sort("Decl"))],sort("Module"),attrs([term(cons("Specification"))]))])),sorts([sort("Decl")])),context-free-syntax([prod([lit("imports"),iter-star(sort("ImportModName"))],sort("Decl"),attrs([term(cons("Imports"))])),prod([lit("strategies"),iter-star(sort("Def"))],sort("Decl"),attrs([term(cons("Strategies"))])),prod([lit("signature"),iter-star(sort("Sdecl"))],sort("Decl"),attrs([term(cons("Signature"))]))])),sorts([sort("ImportModName")])),context-free-syntax([prod([sort("ModName")],sort("ImportModName"),attrs([term(cons("Import"))]))])),syntax([prod([cf(sort("ModName")),lit("/"),lit("-")],cf(sort("ImportModName")),attrs([term(cons("ImportWildcard"))]))])))]),module(unparameterized("Stratego-Sugar-Modules"),[imports([module(unparameterized("Stratego-Core-Modules")),module(unparameterized("Stratego-Sugar-Strategies")),module(unparameterized("Stratego-Sugar-Signatures")),module(unparameterized("Stratego-Sugar-Overlays")),module(unparameterized("Stratego-Sugar-Rules"))])],[exports(conc-grammars(sorts([sort("Decl"),sort("Def")]),context-free-syntax([prod([lit("rules"),iter-star(sort("Def"))],sort("Decl"),attrs([term(cons("Rules"))])),prod([lit("overlays"),iter-star(sort("Overlay"))],sort("Decl"),attrs([term(cons("Overlays"))])),prod([sort("RuleDef")],sort("Def"),attrs([]))])))]),module(unparameterized("Stratego-Sugar-StringQuotations"),[],[exports(conc-grammars(conc-grammars(conc-grammars(sorts([sort("StringQuotation"),sort("StringQuotedPart1"),sort("StringQuotedChars1"),sort("DollarOpen1"),sort("DollarClose1"),sort("QuotedBracket1"),sort("Dollar1"),sort("StringQuotedPart2"),sort("StringQuotedChars2"),sort("DollarOpen2"),sort("DollarClose2"),sort("QuotedBracket2"),sort("Dollar2"),sort("StringQuotedPart3"),sort("StringQuotedChars3"),sort("DollarOpen3"),sort("DollarClose3"),sort("QuotedBracket3"),sort("Dollar3"),sort("StringQuotedPart4"),sort("StringQuotedChars4"),sort("DollarOpen4"),sort("DollarClose4"),sort("QuotedBracket4"),sort("Dollar4"),sort("Padding")]),context-free-syntax([prod([sort("StringQuotation")],sort("PreTerm"),attrs([]))])),syntax([prod([sort("StringQuotation")],cf(sort("PreTerm")),attrs([])),prod([lit("$"),lit("["),sort("Padding"),iter-star(sort("StringQuotedPart1")),lit("]")],sort("StringQuotation"),attrs([term(cons("StringQuotation1"))])),prod([sort("Padding"),lit("["),cf(opt(layout)),cf(sort("Term")),cf(opt(layout)),lit("]")],sort("StringQuotedPart1"),attrs([term(cons("StringEscape1"))])),prod([lex(sort("StringQuotedChars1"))],sort("StringQuotedPart1"),attrs([term(cons("QStr"))])),prod([lex(sort("Dollar1"))],sort("StringQuotedPart1"),attrs([term(cons("QDollar"))])),prod([lit("$"),lex(sort("QuotedBracket1")),lit("$")],sort("StringQuotedPart1"),attrs([term(cons("QBr"))])),prod([iter(char-class(comp(simple-charclass(present(conc(short("\\["),conc(short("\\]"),short("\\$"))))))))],lex(sort("StringQuotedChars1")),attrs([])),prod([char-class(simple-charclass(present(conc(short("\\["),short("\\]")))))],lex(sort("QuotedBracket1")),attrs([])),prod([lit("$")],lex(sort("Dollar1")),attrs([])),prod([lit("$"),lit("{"),sort("Padding"),iter-star(sort("StringQuotedPart2")),lit("}")],sort("StringQuotation"),attrs([term(cons("StringQuotation2"))])),prod([sort("Padding"),lit("{"),cf(opt(layout)),cf(sort("Term")),cf(opt(layout)),lit("}")],sort("StringQuotedPart2"),attrs([term(cons("StringEscape2"))])),prod([lex(sort("StringQuotedChars2"))],sort("StringQuotedPart2"),attrs([term(cons("QStr"))])),prod([lex(sort("Dollar2"))],sort("StringQuotedPart2"),attrs([term(cons("QDollar"))])),prod([lit("$"),lex(sort("QuotedBracket2")),lit("$")],sort("StringQuotedPart2"),attrs([term(cons("QBr"))])),prod([iter(char-class(comp(simple-charclass(present(conc(short("\\{"),conc(short("\\}"),short("\\$"))))))))],lex(sort("StringQuotedChars2")),attrs([])),prod([char-class(simple-charclass(present(conc(short("\\{"),short("\\}")))))],lex(sort("QuotedBracket2")),attrs([])),prod([lit("$")],lex(sort("Dollar2")),attrs([])),prod([lit("$"),lit("("),sort("Padding"),iter-star(sort("StringQuotedPart3")),lit(")")],sort("StringQuotation"),attrs([term(cons("StringQuotation3"))])),prod([sort("Padding"),lit("("),cf(opt(layout)),cf(sort("Term")),cf(opt(layout)),lit(")")],sort("StringQuotedPart3"),attrs([term(cons("StringEscape3"))])),prod([lex(sort("StringQuotedChars3"))],sort("StringQuotedPart3"),attrs([term(cons("QStr"))])),prod([lex(sort("Dollar3"))],sort("StringQuotedPart3"),attrs([term(cons("QDollar"))])),prod([lit("$"),lex(sort("QuotedBracket3")),lit("$")],sort("StringQuotedPart3"),attrs([term(cons("QBr"))])),prod([iter(char-class(comp(simple-charclass(present(conc(short("\\("),conc(short("\\)"),short("\\$"))))))))],lex(sort("StringQuotedChars3")),attrs([])),prod([char-class(simple-charclass(present(conc(short("\\("),short("\\)")))))],lex(sort("QuotedBracket3")),attrs([])),prod([lit("$")],lex(sort("Dollar3")),attrs([])),prod([lit("$"),lit("<"),sort("Padding"),iter-star(sort("StringQuotedPart4")),lit(">")],sort("StringQuotation"),attrs([term(cons("StringQuotation4"))])),prod([sort("Padding"),lit("<"),cf(opt(layout)),cf(sort("Term")),cf(opt(layout)),lit(">")],sort("StringQuotedPart4"),attrs([term(cons("StringEscape4"))])),prod([lex(sort("StringQuotedChars4"))],sort("StringQuotedPart4"),attrs([term(cons("QStr"))])),prod([lex(sort("Dollar4"))],sort("StringQuotedPart4"),attrs([term(cons("QDollar"))])),prod([lit("$"),lex(sort("QuotedBracket4")),lit("$")],sort("StringQuotedPart4"),attrs([term(cons("QBr"))])),prod([iter(char-class(comp(simple-charclass(present(conc(short("\\<"),conc(short("\\>"),short("\\$"))))))))],lex(sort("StringQuotedChars4")),attrs([])),prod([char-class(simple-charclass(present(conc(short("\\<"),short("\\>")))))],lex(sort("QuotedBracket4")),attrs([])),prod([lit("$")],lex(sort("Dollar4")),attrs([])),prod([lex(sort("Padding"))],sort("Padding"),attrs([])),prod([],lex(sort("Padding")),attrs([term(indentpadding)]))])),lexical-restrictions([follow([sort("StringQuotedChars1")],single(char-class(comp(simple-charclass(present(conc(short("\\["),conc(short("\\]"),short("\\$"))))))))),follow([sort("StringQuotedChars2")],single(char-class(comp(simple-charclass(present(conc(short("\\{"),conc(short("\\}"),short("\\$"))))))))),follow([sort("StringQuotedChars3")],single(char-class(comp(simple-charclass(present(conc(short("\\("),conc(short("\\)"),short("\\$"))))))))),follow([sort("StringQuotedChars4")],single(char-class(comp(simple-charclass(present(conc(short("\\<"),conc(short("\\>"),short("\\$"))))))))),follow([sort("Dollar1")],single(seq(simple-charclass(present(conc(short("\\["),short("\\]")))),single(char-class(simple-charclass(present(short("\\$")))))))),follow([sort("Dollar2")],single(seq(simple-charclass(present(conc(short("\\{"),short("\\}")))),single(char-class(simple-charclass(present(short("\\$")))))))),follow([sort("Dollar3")],single(seq(simple-charclass(present(conc(short("\\("),short("\\)")))),single(char-class(simple-charclass(present(short("\\$")))))))),follow([sort("Dollar4")],single(seq(simple-charclass(present(conc(short("\\<"),short("\\>")))),single(char-class(simple-charclass(present(short("\\$"))))))))])))]),module(unparameterized("Stratego-Core-Constants"),[],[exports(conc-grammars(sorts([sort("Int"),sort("Real"),sort("String"),sort("StrChar")]),lexical-syntax([prod([opt(char-class(simple-charclass(present(short("\\-"))))),iter(char-class(simple-charclass(present(range(short("0"),short("9"))))))],sort("Int"),attrs([])),prod([opt(char-class(simple-charclass(present(short("\\-"))))),iter(char-class(simple-charclass(present(range(short("0"),short("9")))))),char-class(simple-charclass(present(short("\\.")))),iter(char-class(simple-charclass(present(range(short("0"),short("9"))))))],sort("Real"),attrs([])),prod([lit("\\\""),iter-star(sort("StrChar")),lit("\\\"")],sort("String"),attrs([])),prod([char-class(comp(simple-charclass(present(conc(short("\\\""),short("\\\\"))))))],sort("StrChar"),attrs([])),prod([char-class(simple-charclass(present(short("\\\\")))),char-class(simple-charclass(present(conc(short("\\\""),conc(short("t"),conc(short("n"),conc(short("r"),short("\\\\"))))))))],sort("StrChar"),attrs([]))])))]),module(unparameterized("Stratego-Sugar-Constants"),[imports([module(unparameterized("Stratego-Core-Identifiers")),module(unparameterized("Stratego-Core-Constants")),module(unparameterized("Stratego-Sugar-StringQuotations"))])],[exports(conc-grammars(sorts([sort("Char"),sort("CharChar")]),lexical-syntax([prod([lit("'"),sort("CharChar"),lit("'")],sort("Char"),attrs([])),prod([char-class(comp(simple-charclass(present(short("\\'")))))],sort("CharChar"),attrs([])),prod([char-class(simple-charclass(present(short("\\\\")))),char-class(simple-charclass(present(conc(short("\\'"),conc(short("n"),conc(short("t"),conc(short("r"),short("\\ "))))))))],sort("CharChar"),attrs([])),prod([sort("Char")],sort("Id"),attrs([reject]))])))]),module(unparameterized("Stratego-Core-Identifiers"),[],[exports(conc-grammars(conc-grammars(conc-grammars(conc-grammars(conc-grammars(conc-grammars(conc-grammars(conc-grammars(conc-grammars(conc-grammars(conc-grammars(sorts([sort("ModName"),sort("ModNamePart")]),lexical-syntax([prod([iter-sep(sort("ModNamePart"),lit("/"))],sort("ModName"),attrs([])),prod([char-class(simple-charclass(present(conc(range(short("a"),short("z")),conc(range(short("A"),short("Z")),conc(short("\\."),short("\\_"))))))),iter-star(char-class(simple-charclass(present(conc(range(short("a"),short("z")),conc(range(short("A"),short("Z")),conc(range(short("0"),short("9")),conc(short("\\'"),conc(short("\\."),conc(short("\\-"),short("\\_")))))))))))],sort("ModNamePart"),attrs([]))])),lexical-restrictions([follow([sort("ModName")],single(char-class(simple-charclass(present(conc(range(short("a"),short("z")),conc(range(short("A"),short("Z")),conc(range(short("0"),short("9")),conc(short("\\'"),conc(short("\\."),conc(short("\\-"),short("\\_"))))))))))))])),lexical-syntax([prod([lit("imports")],sort("ModName"),attrs([reject])),prod([lit("overlays")],sort("ModName"),attrs([reject])),prod([lit("rules")],sort("ModName"),attrs([reject])),prod([lit("signature")],sort("ModName"),attrs([reject])),prod([lit("strategies")],sort("ModName"),attrs([reject]))])),sorts([sort("Id"),sort("LId"),sort("LCID"),sort("UCID"),sort("Wld")])),lexical-syntax([prod([char-class(simple-charclass(present(conc(range(short("a"),short("z")),conc(range(short("A"),short("Z")),short("\\_")))))),iter-star(char-class(simple-charclass(present(conc(range(short("a"),short("z")),conc(range(short("A"),short("Z")),conc(range(short("0"),short("9")),conc(short("\\'"),conc(short("\\-"),short("\\_"))))))))))],sort("Id"),attrs([])),prod([char-class(simple-charclass(present(conc(range(short("a"),short("z")),conc(range(short("A"),short("Z")),short("\\_")))))),iter-star(char-class(simple-charclass(present(conc(range(short("a"),short("z")),conc(range(short("A"),short("Z")),conc(range(short("0"),short("9")),conc(short("\\'"),conc(short("\\-"),short("\\_")))))))))),lit("*")],sort("LId"),attrs([])),prod([char-class(simple-charclass(present(short("\\'")))),iter(char-class(simple-charclass(present(range(short("a"),short("z"))))))],sort("Id"),attrs([])),prod([char-class(simple-charclass(present(range(short("a"),short("z"))))),iter-star(char-class(simple-charclass(present(conc(range(short("a"),short("z")),conc(range(short("A"),short("Z")),conc(range(short("0"),short("9")),conc(short("\\'"),conc(short("\\-"),short("\\_"))))))))))],sort("LCID"),attrs([])),prod([char-class(simple-charclass(present(range(short("A"),short("Z"))))),iter-star(char-class(simple-charclass(present(conc(range(short("a"),short("z")),conc(range(short("A"),short("Z")),conc(range(short("0"),short("9")),conc(short("\\'"),conc(short("\\-"),short("\\_"))))))))))],sort("UCID"),attrs([]))])),lexical-restrictions([follow([sort("Id")],single(char-class(simple-charclass(present(conc(range(short("a"),short("z")),conc(range(short("A"),short("Z")),conc(range(short("0"),short("9")),conc(short("\\'"),conc(short("\\-"),conc(short("\\_"),short("\\*")))))))))))),follow([sort("LId")],single(char-class(simple-charclass(present(conc(range(short("a"),short("z")),conc(range(short("A"),short("Z")),conc(range(short("0"),short("9")),conc(short("\\'"),conc(short("\\-"),short("\\_"))))))))))),follow([sort("LCID")],single(char-class(simple-charclass(present(conc(range(short("a"),short("z")),conc(range(short("A"),short("Z")),conc(range(short("0"),short("9")),conc(short("\\'"),conc(short("\\-"),short("\\_"))))))))))),follow([sort("UCID")],single(char-class(simple-charclass(present(conc(range(short("a"),short("z")),conc(range(short("A"),short("Z")),conc(range(short("0"),short("9")),conc(short("\\'"),conc(short("\\-"),short("\\_")))))))))))])),lexical-syntax([prod([lit("_")],sort("Id"),attrs([reject])),prod([lit("'")],sort("Id"),attrs([reject])),prod([sort("Keyword")],sort("Id"),attrs([reject])),prod([sort("Keyword")],sort("LId"),attrs([reject])),prod([sort("Keyword")],sort("LCID"),attrs([reject])),prod([sort("Keyword")],sort("UCID"),attrs([reject]))])),lexical-restrictions([follow([lit("all"),lit("case"),lit("constructors"),lit("else"),lit("end"),lit("external"),lit("fail"),lit("id"),lit("if"),lit("in"),lit("imports"),lit("let"),lit("module"),lit("not"),lit("one"),lit("overlays"),lit("otherwise"),lit("prim"),lit("rec"),lit("rules"),lit("script"),lit("signature"),lit("some"),lit("sorts"),lit("strategies"),lit("stratego"),lit("switch"),lit("test"),lit("then"),lit("where"),lit("import-term")],single(char-class(simple-charclass(present(conc(range(short("a"),short("z")),conc(range(short("A"),short("Z")),conc(range(short("0"),short("9")),conc(short("\\'"),conc(short("\\-"),short("\\_")))))))))))])),context-free-restrictions([follow([sort("Wld")],single(char-class(simple-charclass(present(conc(range(short("a"),short("z")),conc(range(short("A"),short("Z")),conc(range(short("0"),short("9")),conc(short("\\'"),conc(short("\\-"),short("\\_")))))))))))])),sorts([sort("Keyword")])),lexical-syntax([prod([lit("all")],sort("Keyword"),attrs([])),prod([lit("constructors")],sort("Keyword"),attrs([])),prod([lit("fail")],sort("Keyword"),attrs([])),prod([lit("id")],sort("Keyword"),attrs([])),prod([lit("in")],sort("Keyword"),attrs([])),prod([lit("let")],sort("Keyword"),attrs([])),prod([lit("module")],sort("Keyword"),attrs([])),prod([lit("not")],sort("Keyword"),attrs([])),prod([lit("one")],sort("Keyword"),attrs([])),prod([lit("overlays")],sort("Keyword"),attrs([])),prod([lit("prim")],sort("Keyword"),attrs([])),prod([lit("rules")],sort("Keyword"),attrs([])),prod([lit("script")],sort("Keyword"),attrs([])),prod([lit("signature")],sort("Keyword"),attrs([])),prod([lit("some")],sort("Keyword"),attrs([])),prod([lit("sorts")],sort("Keyword"),attrs([])),prod([lit("strategies")],sort("Keyword"),attrs([])),prod([lit("stratego")],sort("Keyword"),attrs([])),prod([lit("test")],sort("Keyword"),attrs([])),prod([lit("where")],sort("Keyword"),attrs([])),prod([lit("import-term")],sort("Keyword"),attrs([]))])))]),module(unparameterized("Stratego-Core-Layout"),[],[exports(conc-grammars(conc-grammars(conc-grammars(conc-grammars(sorts([sort("Ws"),sort("ShortCom"),sort("LongCom"),sort("CommChar"),sort("Asterisk"),sort("Eof")]),lexical-syntax([prod([char-class(simple-charclass(present(conc(short("\\t"),conc(short("\\ "),conc(short("\\n"),short("\\r")))))))],sort("Ws"),attrs([])),prod([lit("//"),iter-star(char-class(comp(simple-charclass(present(short("\\n")))))),alt(char-class(simple-charclass(present(short("\\n")))),sort("Eof"))],sort("ShortCom"),attrs([])),prod([lit("/*"),iter-star(sort("CommChar")),lit("*/")],sort("LongCom"),attrs([])),prod([],sort("Eof"),attrs([])),prod([char-class(comp(simple-charclass(present(short("\\*")))))],sort("CommChar"),attrs([])),prod([lit("*")],sort("Asterisk"),attrs([])),prod([sort("Asterisk")],sort("CommChar"),attrs([]))])),lexical-restrictions([follow([sort("Asterisk")],single(char-class(simple-charclass(present(short("\\/")))))),follow([sort("Eof")],single(char-class(comp(simple-charclass(absent)))))])),lexical-syntax([prod([sort("ShortCom")],layout,attrs([])),prod([sort("LongCom")],layout,attrs([])),prod([sort("Ws")],layout,attrs([]))])),context-free-restrictions([follow([opt(layout)],single(char-class(simple-charclass(present(conc(short("\\ "),conc(short("\\t"),conc(short("\\n"),short("\\r"))))))))),follow([opt(layout)],single(seq(simple-charclass(present(short("\\/"))),single(char-class(simple-charclass(present(short("\\*")))))))),follow([opt(layout)],single(seq(simple-charclass(present(short("\\/"))),single(char-class(simple-charclass(present(short("\\/"))))))))])))]),module(unparameterized("Stratego-Sugar-Layout"),[imports([module(unparameterized("Stratego-Core-Layout"))])],[]),module(unparameterized("Stratego-Sugar"),[imports([module(unparameterized("Stratego-Sugar-Layout")),module(unparameterized("Stratego-Core-Identifiers")),module(unparameterized("Stratego-Sugar-Constants")),module(unparameterized("Stratego-Sugar-Modules")),module(unparameterized("Stratego-Sugar-Signatures")),module(unparameterized("Stratego-Sugar-Terms")),module(unparameterized("Stratego-Sugar-Strategies")),module(unparameterized("Stratego-Sugar-Rules")),module(unparameterized("Stratego-Sugar-DynamicRules")),module(unparameterized("Stratego-Sugar-Overlays"))])],[hiddens(context-free-start-symbols([sort("Module")]))]),module(unparameterized("Stratego"),[imports([module(unparameterized("Stratego-Sugar"))])],[hiddens(context-free-start-symbols([sort("Module")]))]),module(parameterized("StrategoMix",[sort("Ctx0")]),[imports([renamed-module(unparameterized("Stratego"),renamings([symbol(sort("RuleNames"),parameterized-sort("RuleNames",[sort("Ctx0")])),symbol(sort("RuleDec"),parameterized-sort("RuleDec",[sort("Ctx0")])),symbol(sort("DynRuleScopeId"),parameterized-sort("DynRuleScopeId",[sort("Ctx0")])),symbol(sort("DynRuleId"),parameterized-sort("DynRuleId",[sort("Ctx0")])),symbol(sort("DynRuleDef"),parameterized-sort("DynRuleDef",[sort("Ctx0")])),symbol(sort("ScopeLabels"),parameterized-sort("ScopeLabels",[sort("Ctx0")])),symbol(sort("RuleCond"),parameterized-sort("RuleCond",[sort("Ctx0")])),symbol(sort("Rule"),parameterized-sort("Rule",[sort("Ctx0")])),symbol(sort("RuleDef"),parameterized-sort("RuleDef",[sort("Ctx0")])),symbol(sort("Overlay"),parameterized-sort("Overlay",[sort("Ctx0")])),symbol(sort("SwitchCase"),parameterized-sort("SwitchCase",[sort("Ctx0")])),symbol(sort("StrategyCurly"),parameterized-sort("StrategyCurly",[sort("Ctx0")])),symbol(sort("StrategyAngle"),parameterized-sort("StrategyAngle",[sort("Ctx0")])),symbol(sort("Kind"),parameterized-sort("Kind",[sort("Ctx0")])),symbol(sort("LID"),parameterized-sort("LID",[sort("Ctx0")])),symbol(sort("ImportModName"),parameterized-sort("ImportModName",[sort("Ctx0")])),symbol(sort("Decl"),parameterized-sort("Decl",[sort("Ctx0")])),symbol(sort("Module"),parameterized-sort("Module",[sort("Ctx0")])),symbol(sort("StrategyParen"),parameterized-sort("StrategyParen",[sort("Ctx0")])),symbol(sort("Typedid"),parameterized-sort("Typedid",[sort("Ctx0")])),symbol(sort("Anno"),parameterized-sort("Anno",[sort("Ctx0")])),symbol(sort("EmptyId"),parameterized-sort("EmptyId",[sort("Ctx0")])),symbol(sort("StrategyDef"),parameterized-sort("StrategyDef",[sort("Ctx0")])),symbol(sort("SVar"),parameterized-sort("SVar",[sort("Ctx0")])),symbol(sort("Def"),parameterized-sort("Def",[sort("Ctx0")])),symbol(sort("Type"),parameterized-sort("Type",[sort("Ctx0")])),symbol(sort("RetType"),parameterized-sort("RetType",[sort("Ctx0")])),symbol(sort("ArgType"),parameterized-sort("ArgType",[sort("Ctx0")])),symbol(sort("FunType"),parameterized-sort("FunType",[sort("Ctx0")])),symbol(sort("ConstType"),parameterized-sort("ConstType",[sort("Ctx0")])),symbol(sort("Opdecl"),parameterized-sort("Opdecl",[sort("Ctx0")])),symbol(sort("Sort"),parameterized-sort("Sort",[sort("Ctx0")])),symbol(sort("Sdecl"),parameterized-sort("Sdecl",[sort("Ctx0")])),symbol(sort("Wld"),parameterized-sort("Wld",[sort("Ctx0")])),symbol(sort("ID"),parameterized-sort("ID",[sort("Ctx0")])),symbol(sort("Var"),parameterized-sort("Var",[sort("Ctx0")])),symbol(sort("CharChar"),parameterized-sort("CharChar",[sort("Ctx0")])),symbol(sort("Char"),parameterized-sort("Char",[sort("Ctx0")])),symbol(sort("Padding"),parameterized-sort("Padding",[sort("Ctx0")])),symbol(sort("Dollar4"),parameterized-sort("Dollar4",[sort("Ctx0")])),symbol(sort("QuotedBracket4"),parameterized-sort("QuotedBracket4",[sort("Ctx0")])),symbol(sort("StringQuotedChars4"),parameterized-sort("StringQuotedChars4",[sort("Ctx0")])),symbol(sort("StringQuotedPart4"),parameterized-sort("StringQuotedPart4",[sort("Ctx0")])),symbol(sort("Dollar3"),parameterized-sort("Dollar3",[sort("Ctx0")])),symbol(sort("QuotedBracket3"),parameterized-sort("QuotedBracket3",[sort("Ctx0")])),symbol(sort("StringQuotedChars3"),parameterized-sort("StringQuotedChars3",[sort("Ctx0")])),symbol(sort("StringQuotedPart3"),parameterized-sort("StringQuotedPart3",[sort("Ctx0")])),symbol(sort("Dollar2"),parameterized-sort("Dollar2",[sort("Ctx0")])),symbol(sort("QuotedBracket2"),parameterized-sort("QuotedBracket2",[sort("Ctx0")])),symbol(sort("StringQuotedChars2"),parameterized-sort("StringQuotedChars2",[sort("Ctx0")])),symbol(sort("StringQuotedPart2"),parameterized-sort("StringQuotedPart2",[sort("Ctx0")])),symbol(sort("Dollar1"),parameterized-sort("Dollar1",[sort("Ctx0")])),symbol(sort("QuotedBracket1"),parameterized-sort("QuotedBracket1",[sort("Ctx0")])),symbol(sort("StringQuotedChars1"),parameterized-sort("StringQuotedChars1",[sort("Ctx0")])),symbol(sort("StringQuotedPart1"),parameterized-sort("StringQuotedPart1",[sort("Ctx0")])),symbol(sort("StringQuotation"),parameterized-sort("StringQuotation",[sort("Ctx0")])),symbol(sort("StrChar"),parameterized-sort("StrChar",[sort("Ctx0")])),symbol(sort("String"),parameterized-sort("String",[sort("Ctx0")])),symbol(sort("Real"),parameterized-sort("Real",[sort("Ctx0")])),symbol(sort("Int"),parameterized-sort("Int",[sort("Ctx0")])),symbol(sort("Keyword"),parameterized-sort("Keyword",[sort("Ctx0")])),symbol(sort("UCID"),parameterized-sort("UCID",[sort("Ctx0")])),symbol(sort("LCID"),parameterized-sort("LCID",[sort("Ctx0")])),symbol(sort("LId"),parameterized-sort("LId",[sort("Ctx0")])),symbol(sort("Id"),parameterized-sort("Id",[sort("Ctx0")])),symbol(sort("ModNamePart"),parameterized-sort("ModNamePart",[sort("Ctx0")])),symbol(sort("ModName"),parameterized-sort("ModName",[sort("Ctx0")])),symbol(sort("PreTerm"),parameterized-sort("PreTerm",[sort("Ctx0")])),symbol(sort("Term"),parameterized-sort("Term",[sort("Ctx0")])),symbol(sort("StrategyMid"),parameterized-sort("StrategyMid",[sort("Ctx0")])),symbol(sort("Strategy"),parameterized-sort("Strategy",[sort("Ctx0")]))]))])],[]),module(unparameterized("Stratego-Enfun"),[imports([module(parameterized("StrategoMix",[sort("StrategoHost")])),module(unparameterized("Enfun"))])],[exports(conc-grammars(conc-grammars(conc-grammars(conc-grammars(context-free-start-symbols([parameterized-sort("Module",[sort("StrategoHost")])]),context-free-syntax([prod([lit("|["),sort("Definition"),lit("]|")],parameterized-sort("Term",[sort("StrategoHost")]),attrs([term(cons("ToMetaExpr"))])),prod([lit("|["),sort("Property"),lit("]|")],parameterized-sort("Term",[sort("StrategoHost")]),attrs([term(cons("ToMetaExpr"))])),prod([lit("|["),sort("Stat"),lit("]|")],parameterized-sort("Term",[sort("StrategoHost")]),attrs([term(cons("ToMetaExpr"))])),prod([lit("|["),sort("Exp"),lit("]|")],parameterized-sort("Term",[sort("StrategoHost")]),attrs([term(cons("ToMetaExpr"))]))])),variables([prod([char-class(simple-charclass(present(conc(short("x"),conc(short("y"),conc(short("z"),conc(short("f"),short("g")))))))),sort("MetaVarSuffix")],sort("ID"),attrs([prefer])),prod([char-class(simple-charclass(present(conc(short("x"),conc(short("y"),conc(short("z"),conc(short("f"),short("g")))))))),sort("MetaVarSuffix"),lit("*")],iter-star-sep(sort("ID"),lit(",")),attrs([prefer])),prod([lit("qid"),sort("MetaVarSuffix")],sort("QId"),attrs([prefer])),prod([lit("lval"),sort("MetaVarSuffix")],sort("LVal"),attrs([prefer])),prod([lit("e"),sort("MetaVarSuffix")],sort("Exp"),attrs([prefer])),prod([lit("e"),sort("MetaVarSuffix"),lit("*")],iter-star-sep(sort("Exp"),lit(",")),attrs([prefer])),prod([lit("t"),sort("MetaVarSuffix")],sort("Type"),attrs([prefer])),prod([lit("stat"),sort("MetaVarSuffix")],sort("Stat"),attrs([prefer])),prod([lit("stat"),sort("MetaVarSuffix"),lit("*")],iter-star(sort("Stat")),attrs([prefer])),prod([lit("arg"),sort("MetaVarSuffix")],sort("Arg"),attrs([prefer])),prod([lit("arg"),sort("MetaVarSuffix"),lit("*")],iter-star-sep(sort("Arg"),lit(",")),attrs([prefer])),prod([char-class(simple-charclass(present(short("d")))),sort("MetaVarSuffix")],sort("Definition"),attrs([prefer]))])),lexical-syntax([prod([iter-star(char-class(simple-charclass(present(range(short("0"),short("9"))))))],sort("MetaVarSuffix"),attrs([])),prod([lit("_"),iter(char-class(simple-charclass(present(conc(range(short("A"),short("Z")),conc(range(short("a"),short("z")),conc(range(short("0"),short("9")),conc(short("\\_"),short("\\-")))))))))],sort("MetaVarSuffix"),attrs([]))])),lexical-restrictions([follow([sort("MetaVarSuffix")],single(char-class(simple-charclass(present(conc(range(short("a"),short("z")),conc(range(short("A"),short("Z")),range(short("0"),short("9")))))))))])))])])