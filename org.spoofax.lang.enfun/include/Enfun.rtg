
regular tree grammar
  start Stat Property Exp Definition Start
  productions
    Lit_Lit_Lit_Lit0      -> <string>
    ListStarOfStat0       -> ListPlusOfStat0
    ListStarOfStat0       -> <nil>()
    ListStarOfStat0       -> <conc>(ListStarOfStat0,ListStarOfStat0)
    ListPlusOfStat0       -> <conc>(ListStarOfStat0,ListPlusOfStat0)
    ListPlusOfStat0       -> <conc>(ListPlusOfStat0,ListStarOfStat0)
    ListPlusOfStat0       -> <conc>(ListPlusOfStat0,ListPlusOfStat0)
    ListPlusOfStat0       -> <cons>(Stat,ListStarOfStat0)
    OptElse0              -> <some>(Else)
    OptElse0              -> <none>()
    ListStarOfElseIf0     -> ListPlusOfElseIf0
    ListStarOfElseIf0     -> <nil>()
    ListStarOfElseIf0     -> <conc>(ListStarOfElseIf0,ListStarOfElseIf0)
    ListPlusOfElseIf0     -> <conc>(ListStarOfElseIf0,ListPlusOfElseIf0)
    ListPlusOfElseIf0     -> <conc>(ListPlusOfElseIf0,ListStarOfElseIf0)
    ListPlusOfElseIf0     -> <conc>(ListPlusOfElseIf0,ListPlusOfElseIf0)
    ListPlusOfElseIf0     -> <cons>(ElseIf,ListStarOfElseIf0)
    ListStarOfExp0        -> ListPlusOfExp0
    ListStarOfExp0        -> <nil>()
    ListStarOfExp0        -> <conc>(ListStarOfExp0,ListStarOfExp0)
    ListPlusOfExp0        -> <conc>(ListStarOfExp0,ListPlusOfExp0)
    ListPlusOfExp0        -> <conc>(ListPlusOfExp0,ListStarOfExp0)
    ListPlusOfExp0        -> <conc>(ListPlusOfExp0,ListPlusOfExp0)
    ListPlusOfExp0        -> <cons>(Exp,ListStarOfExp0)
    OptReturnType0        -> <some>(ReturnType)
    OptReturnType0        -> <none>()
    ListStarOfArg0        -> ListPlusOfArg0
    ListStarOfArg0        -> <nil>()
    ListStarOfArg0        -> <conc>(ListStarOfArg0,ListStarOfArg0)
    ListPlusOfArg0        -> <conc>(ListStarOfArg0,ListPlusOfArg0)
    ListPlusOfArg0        -> <conc>(ListPlusOfArg0,ListStarOfArg0)
    ListPlusOfArg0        -> <conc>(ListPlusOfArg0,ListPlusOfArg0)
    ListPlusOfArg0        -> <cons>(Arg,ListStarOfArg0)
    OptPropInit0          -> <some>(PropInit)
    OptPropInit0          -> <none>()
    ListStarOfTypeParam0  -> ListPlusOfTypeParam0
    ListStarOfTypeParam0  -> <nil>()
    ListStarOfTypeParam0  -> <conc>(ListStarOfTypeParam0,ListStarOfTypeParam0)
    ListPlusOfTypeParam0  -> <conc>(ListStarOfTypeParam0,ListPlusOfTypeParam0)
    ListPlusOfTypeParam0  -> <conc>(ListPlusOfTypeParam0,ListStarOfTypeParam0)
    ListPlusOfTypeParam0  -> <conc>(ListPlusOfTypeParam0,ListPlusOfTypeParam0)
    ListPlusOfTypeParam0  -> <cons>(TypeParam,ListStarOfTypeParam0)
    ListStarOfType0       -> ListPlusOfType0
    ListStarOfType0       -> <nil>()
    ListStarOfType0       -> <conc>(ListStarOfType0,ListStarOfType0)
    ListPlusOfType0       -> <conc>(ListStarOfType0,ListPlusOfType0)
    ListPlusOfType0       -> <conc>(ListPlusOfType0,ListStarOfType0)
    ListPlusOfType0       -> <conc>(ListPlusOfType0,ListPlusOfType0)
    ListPlusOfType0       -> <cons>(Type,ListStarOfType0)
    ListStarOfProperty0   -> ListPlusOfProperty0
    ListStarOfProperty0   -> <nil>()
    ListStarOfProperty0   -> <conc>(ListStarOfProperty0,ListStarOfProperty0)
    ListPlusOfProperty0   -> <conc>(ListStarOfProperty0,ListPlusOfProperty0)
    ListPlusOfProperty0   -> <conc>(ListPlusOfProperty0,ListStarOfProperty0)
    ListPlusOfProperty0   -> <conc>(ListPlusOfProperty0,ListPlusOfProperty0)
    ListPlusOfProperty0   -> <cons>(Property,ListStarOfProperty0)
    OptExtension0         -> <some>(Extension)
    OptExtension0         -> <none>()
    OptTypeParams0        -> <some>(TypeParams)
    OptTypeParams0        -> <none>()
    ListStarOfDefinition0 -> ListPlusOfDefinition0
    ListStarOfDefinition0 -> <nil>()
    ListStarOfDefinition0 -> <conc>(ListStarOfDefinition0,ListStarOfDefinition0)
    ListPlusOfDefinition0 -> <conc>(ListStarOfDefinition0,ListPlusOfDefinition0)
    ListPlusOfDefinition0 -> <conc>(ListPlusOfDefinition0,ListStarOfDefinition0)
    ListPlusOfDefinition0 -> <conc>(ListPlusOfDefinition0,ListPlusOfDefinition0)
    ListPlusOfDefinition0 -> <cons>(Definition,ListStarOfDefinition0)
    ListStarOfStringChar0 -> <string>
    ListPlusOfStringChar0 -> <string>
    OptLit0               -> <string>
    Start                 -> Module
    Keyword               -> <string>
    Exp                   -> String(STRING)
    Exp                   -> Geq(Exp,Exp)
    Exp                   -> Leq(Exp,Exp)
    Exp                   -> Gt(Exp,Exp)
    Exp                   -> Lt(Exp,Exp)
    Exp                   -> Eq(Exp,Exp)
    Exp                   -> Mul(Exp,Exp)
    Exp                   -> Minus(Exp,Exp)
    Exp                   -> Plus(Exp,Exp)
    Exp                   -> Int(INT)
    Exp                   -> Or(Exp,Exp)
    Exp                   -> And(Exp,Exp)
    Exp                   -> Not(Exp)
    Exp                   -> False()
    Exp                   -> True()
    Stat                  -> Assign(Exp,Exp)
    Exp                   -> Var(ID)
    Stat                  -> VarDeclInit(ID,Type,Exp)
    Stat                  -> VarDecl(ID,Type)
    Else                  -> COMPLETION-Else(CONTENTCOMPLETE)
    ElseIf                -> COMPLETION-ElseIf(CONTENTCOMPLETE)
    Stat                  -> While(Exp,ListStarOfStat0)
    Else                  -> Else(ListStarOfStat0)
    ElseIf                -> ElseIf(Exp,ListStarOfStat0)
    Stat                  -> IfElse(Exp,ListStarOfStat0,ListStarOfElseIf0,OptElse0)
    Stat                  -> Seq(ListStarOfStat0)
    Stat                  -> Block(ListStarOfStat0)
    Stat                  -> Exp(Exp)
    Stat                  -> COMPLETION-Stat(CONTENTCOMPLETE)
    ReturnType            -> COMPLETION-ReturnType(CONTENTCOMPLETE)
    Arg                   -> COMPLETION-Arg(CONTENTCOMPLETE)
    Stat                  -> Return(Exp)
    Arg                   -> Arg(ID,Type)
    Exp                   -> MethCall(Exp,ID,ListStarOfExp0)
    Exp                   -> ThisCall(ID,ListStarOfExp0)
    Property              -> FunDef(ID,ListStarOfArg0,OptReturnType0,ListStarOfStat0)
    Property              -> FunDecl(ID,ListStarOfArg0,OptReturnType0)
    Exp                   -> COMPLETION-Exp(CONTENTCOMPLETE)
    PropInit              -> COMPLETION-PropInit(CONTENTCOMPLETE)
    Property              -> COMPLETION-Property(CONTENTCOMPLETE)
    Exp                   -> New(Type)
    Exp                   -> This()
    Exp                   -> PropAccess(Exp,ID)
    PropInit              -> Init(Exp)
    Property              -> Property(ID,Type,OptPropInit0)
    TypeParam             -> COMPLETION-TypeParam(CONTENTCOMPLETE)
    TypeParams            -> COMPLETION-TypeParams(CONTENTCOMPLETE)
    Type                  -> COMPLETION-Type(CONTENTCOMPLETE)
    Extension             -> COMPLETION-Extension(CONTENTCOMPLETE)
    TypeParam             -> TypeParam(ID)
    TypeParams            -> TypeParams(ListStarOfTypeParam0)
    Type                  -> Type(ID,ListStarOfType0)
    Type                  -> Type0(ID)
    Extension             -> Extends(ID)
    Definition            -> Entity(ID,OptTypeParams0,OptExtension0,ListStarOfProperty0)
    Definition            -> COMPLETION-Definition(CONTENTCOMPLETE)
    Module                -> COMPLETION-Module(CONTENTCOMPLETE)
    Definition            -> Imports(ID)
    Module                -> Module(ID,ListStarOfDefinition0)
    EOF                   -> <string>
    CommentChar           -> <string>
    BackSlashChar         -> <string>
    StringChar            -> <string>
    STRING                -> <string>
    INT                   -> <string>
    ID                    -> <string>
