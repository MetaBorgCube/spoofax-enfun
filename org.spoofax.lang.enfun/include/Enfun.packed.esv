Module("Enfun.main.packed",Imports([Import("Enfun.main"),Import("Enfun-Builders"),Import("Enfun-Colorer"),Import("Enfun-Completions"),Import("Enfun-Folding"),Import("Enfun-Outliner"),Import("Enfun-References"),Import("Enfun-Syntax"),Import("Enfun-Builders.generated"),Import("Enfun-Colorer.generated"),Import("Enfun.generated.copied"),Import("Enfun-Folding.generated"),Import("Enfun-Outliner.generated"),Import("Enfun-References.generated"),Import("Enfun-Syntax.generated")]),[Language(" General properties",[LanguageName("Enfun"),LanguageId("enfun"),Extends(Values(["Root"])),Description(String("\"Spoofax/IMP-generated editor for the Enfun language\"")),URL("http://strategoxt.org"),Extensions(Values(["enf"])),Table("include/Enfun.tbl"),StartSymbols([Sort("Start")])]),Builders("",[SemanticProvider("include/enfun.ctree"),SemanticObserver(Strategy("editor-analyze"),[MultiFile]),Builder(String("\"Pretty-print\""),Strategy("editor-prettyprint"),[OpenEditor,RealTime,Source]),Builder(String("\"Show abstract syntax\""),Strategy("debug-generate-aterm"),[OpenEditor,RealTime,Meta,Source]),Builder(String("\"Show desugared AST\""),Strategy("debug-desugar-aterm"),[OpenEditor,RealTime,Meta,Source]),Builder(String("\"Show normalized AST\""),Strategy("debug-normalize-aterm"),[OpenEditor,RealTime,Meta,Source]),Builder(String("\"Show deffed syntax\""),Strategy("debug-generate-deffed"),[OpenEditor,RealTime,Meta,Source]),Builder(String("\"Show analyzed syntax\""),Strategy("debug-generate-analyzed"),[OpenEditor,RealTime,Meta,Source]),Builder(String("\"Show index entries for current file\""),Strategy("debug-index-show-current-file"),[OpenEditor,RealTime,Meta,Source]),Builder(String("\"Show index entries for all files\""),Strategy("debug-index-show-all-files"),[OpenEditor,RealTime,Meta,Source]),Builder(String("\"Clear index for current file\""),Strategy("debug-index-clear-current"),[Meta,Source]),Builder(String("\"Clear index\""),Strategy("debug-index-clear"),[Meta,Source]),Builder(String("\"Reload index\""),Strategy("debug-index-reload"),[Meta,Source])]),Refactorings("",[PrettyPrint(Strategy("pp-enfun-string")),Refactoring([Sort("ID")],String("\"Rename Entity\""),Strategy("rename-entity"),[Source,Cursor],[Shortcut(InteractionId(String("\"org.eclipse.jdt.ui.edit.text.java.rename.element\""))),UserInput([IdInputField(String("\"new name\""),String("\"\""))])])]),Colorer(" Default, token-based highlighting",[ColorRule(Token(TK_KEYWORD),Attribute(ColorRGB("127","0","85"),NoColor,BOLD)),ColorRule(Token(TK_IDENTIFIER),AttributeRef("default")),ColorRule(Token(TK_STRING),AttributeRef("blue")),ColorRule(Token(TK_NUMBER),AttributeRef("darkgreen")),ColorRule(Token(TK_VAR),Attribute(ColorRGB("255","0","100"),NoColor,ITALIC)),ColorRule(Token(TK_OPERATOR),Attribute(ColorRGB("0","0","128"),NoColor,NORMAL)),ColorRule(Token(TK_LAYOUT),Attribute(ColorRGB("63","127","95"),NoColor,ITALIC))]),Colorer(" System colors",[ColorDef("darkred",Attribute(ColorRGB("128","0","0"),NoColor,NORMAL)),ColorDef("red",Attribute(ColorRGB("255","0","0"),NoColor,NORMAL)),ColorDef("darkgreen",Attribute(ColorRGB("0","128","0"),NoColor,NORMAL)),ColorDef("green",Attribute(ColorRGB("0","255","0"),NoColor,NORMAL)),ColorDef("darkblue",Attribute(ColorRGB("0","0","128"),NoColor,NORMAL)),ColorDef("blue",Attribute(ColorRGB("0","0","255"),NoColor,NORMAL)),ColorDef("cyan",Attribute(ColorRGB("0","255","255"),NoColor,NORMAL)),ColorDef("magenta",Attribute(ColorRGB("255","0","255"),NoColor,NORMAL)),ColorDef("yellow",Attribute(ColorRGB("255","255","0"),NoColor,NORMAL)),ColorDef("white",Attribute(ColorRGB("255","255","255"),NoColor,NORMAL)),ColorDef("black",Attribute(ColorRGB("0","0","0"),NoColor,NORMAL)),ColorDef("gray",Attribute(ColorRGB("128","128","128"),NoColor,NORMAL)),ColorDef("grey",AttributeRef("gray")),ColorDef("orange",Attribute(ColorRGB("255","165","0"),NoColor,NORMAL)),ColorDef("pink",Attribute(ColorRGB("255","105","180"),NoColor,NORMAL)),ColorDef("brown",Attribute(ColorRGB("139","69","19"),NoColor,NORMAL)),ColorDef("default",Attribute(ColorDefault,NoColor,NORMAL))]),Completions("",[CompletionProposer(Strategy("editor-complete")),CompletionTrigger(String("\":\""),None)]),Completions("",[CompletionTemplateEx([Sort("Module")],CompletionPrefix(String("\"module ID \"")),[String("\"module \""),PlaceholderWithSort("<ID:","ID"),String("\"\\n\\t\""),Cursor],[Blank]),CompletionTemplateEx([Sort("Definition")],CompletionPrefix(String("\"imports ID\"")),[String("\"imports \""),PlaceholderWithSort("<ID:","ID")],[])]),Completions("",[CompletionTemplateEx([Sort("Definition")],CompletionPrefix(String("\"entity ID { }\"")),[String("\"entity \""),PlaceholderWithSort("<ID:","ID"),String("\" {\\n\\t\""),Cursor,String("\"\\n}\"")],[Blank])]),Completions("",[CompletionTemplateEx([Sort("Property")],CompletionPrefix(String("\"ID : ID\"")),[PlaceholderWithSort("<ID:","ID"),String("\" : \""),PlaceholderWithSort("<ID:","Type")],[Blank]),CompletionTemplateEx([Sort("Exp")],CompletionPrefix(String("\"ID.ID\"")),[PlaceholderWithSort("<ID:","Exp"),String("\".\""),PlaceholderWithSort("<ID:","ID")],[])]),Completions("",[CompletionTemplateEx([Sort("Property")],CompletionPrefix(String("\"function ID () { }\"")),[String("\"function \""),PlaceholderWithSort("<ID:","ID"),String("\" (\""),PlaceholderWithSort("<:","Arg"),String("\") \""),PlaceholderWithSort("<:","ReturnType"),String("\" {\\n\\t\""),Cursor,String("\"\\n}\"")],[Blank]),CompletionTemplateEx([Sort("Exp")],CompletionPrefix(String("\"ID()\"")),[PlaceholderWithSort("<ID:","ID"),String("\"(\""),PlaceholderWithSort("<:","Exp"),String("\")\"")],[]),CompletionTemplateEx([Sort("Exp")],CompletionPrefix(String("\"ID.ID()\"")),[PlaceholderWithSort("<ID:","Exp"),String("\".\""),PlaceholderWithSort("<ID:","ID"),String("\"(\""),PlaceholderWithSort("<:","Exp"),String("\")\"")],[]),CompletionTemplateEx([Sort("Arg")],CompletionPrefix(String("\"ID : ID\"")),[PlaceholderWithSort("<ID:","ID"),String("\" : \""),PlaceholderWithSort("<ID:","Type")],[]),CompletionTemplateEx([Sort("ReturnType")],CompletionPrefix(String("\": ID\"")),[String("\": \""),PlaceholderWithSort("<ID:","Type")],[]),CompletionTemplateEx([Sort("Stat")],CompletionPrefix(String("\"return ID;\"")),[String("\"return \""),PlaceholderWithSort("<ID:","Exp"),String("\";\"")],[])]),Completions("",[CompletionTemplateEx([Sort("Stat")],CompletionPrefix(String("\"ID;\"")),[PlaceholderWithSort("<ID:","Exp"),String("\";\"")],[]),CompletionTemplateEx([Sort("Stat")],CompletionPrefix(String("\"{ }\"")),[String("\"{\\n\\t\\t\""),Cursor,String("\"\\n\\t}\"")],[Blank])]),Completions("",[CompletionTemplateEx([Sort("Stat")],CompletionPrefix(String("\"var ID : ID;\"")),[String("\"var \""),PlaceholderWithSort("<ID:","ID"),String("\" : \""),PlaceholderWithSort("<ID:","Type"),String("\";\"")],[Blank]),CompletionTemplateEx([Sort("Stat")],CompletionPrefix(String("\"var ID : ID := ID;\"")),[String("\"var \""),PlaceholderWithSort("<ID:","ID"),String("\" : \""),PlaceholderWithSort("<ID:","Type"),String("\" := \""),PlaceholderWithSort("<ID:","Exp"),String("\";\"")],[Blank]),CompletionTemplateEx([Sort("Stat")],CompletionPrefix(String("\"ID := ID;\"")),[PlaceholderWithSort("<ID:","Exp"),String("\" := \""),PlaceholderWithSort("<ID:","Exp"),String("\";\"")],[Blank])]),Completions("",[CompletionTemplateEx([Sort("Exp")],CompletionPrefix(String("\"ID + ID\"")),[PlaceholderWithSort("<ID:","Exp"),String("\" + \""),PlaceholderWithSort("<ID:","Exp")],[]),CompletionTemplateEx([Sort("Exp")],CompletionPrefix(String("\"ID - ID\"")),[PlaceholderWithSort("<ID:","Exp"),String("\" - \""),PlaceholderWithSort("<ID:","Exp")],[]),CompletionTemplateEx([Sort("Exp")],CompletionPrefix(String("\"ID * ID\"")),[PlaceholderWithSort("<ID:","Exp"),String("\" * \""),PlaceholderWithSort("<ID:","Exp")],[])]),Completions("",[CompletionTemplateEx([Sort("Exp")],CompletionPrefix(String("\"this\"")),[String("\"this\"")],[])]),Folding(" Default folding definitions",[FoldRule(SortAndConstructor(Sort("Module"),Constructor("Module")),None),FoldRule(SortAndConstructor(Sort("Definition"),Constructor("Entity")),None),FoldRule(Sort("OptTypeParams0"),None),FoldRule(SortAndConstructor(Sort("TypeParams"),Constructor("TypeParams")),None),FoldRule(SortAndConstructor(Sort("Property"),Constructor("FunDecl")),None),FoldRule(SortAndConstructor(Sort("Property"),Constructor("FunDef")),None)]),Outliner(" Default outliner        ",[OutlineRule(SortAndConstructor(Sort("Module"),Constructor("Module"))),OutlineRule(SortAndConstructor(Sort("Definition"),Constructor("Entity"))),OutlineRule(SortAndConstructor(Sort("Type"),Constructor("Type"))),OutlineRule(SortAndConstructor(Sort("Exp"),Constructor("ThisCall"))),OutlineRule(SortAndConstructor(Sort("Exp"),Constructor("MethCall"))),OutlineRule(SortAndConstructor(Sort("Property"),Constructor("FunDecl"))),OutlineRule(SortAndConstructor(Sort("Property"),Constructor("FunDef"))),OutlineRule(SortAndConstructor(Sort("Stat"),Constructor("IfElse"))),OutlineRule(SortAndConstructor(Sort("ElseIf"),Constructor("ElseIf"))),OutlineRule(SortAndConstructor(Sort("Stat"),Constructor("While")))]),References("",[ReferenceRule("_",Strategy("editor-resolve")),HoverRule("_",Strategy("editor-hover"))]),Language(" Syntax properties (static defaults)",[LineCommentPrefix(String("\"//\"")),BlockCommentDefs(BlockCommentDef(String("\"/*\""),"*",String("\"*/\""))),FenceDefs([FenceDef("[","]"),FenceDef("(",")"),FenceDef("{","}")]),IndentDefs([IndentDef(String("\"=\"")),IndentDef(String("\":\""))]),IdentifierLexical(String("\"[A-Za-z0-9_]+\""))])])