module example7

  // test inheritance

  entity Bool { }
  entity Ordered {
    function lt(that: Ordered): Bool
    function gt(that: Ordered): Bool
    function leq(that: Ordered): Bool
    function geq(that: Ordered): Bool
  }
  entity Int : Ordered { 
    function plus(that:Int): Int
    function times(that:Int): Int
    function minus(that:Int): Int
    function div(that:Int): Int
  } 
  
  entity Point {
    x : Int
    y : Int
    function sum(): Int {
      return x + y;
    }
  } 
  
  entity ColoredPoint : Point {
    color: Int
    function sum() : Int {
      return x + y + color;
    }
    function setX(newx: Int) {
      x := newx;
    }
  }
  
  entity Shape {
    p : ColoredPoint
    q : Point
    function sum(): Int {
      return p.sum() + q.sum();
    }
    function setX(newx: Int) {
      q.x := newx;
      p.x := newx;
      p.color := newx;
    }
  }
  